{"version":3,"file":"js/app.8c492e88.js","mappings":"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","sources":["webpack://oj-web/./src/App.vue","webpack://oj-web/./src/store/index.js","webpack://oj-web/./src/views/UserLogin.vue","webpack://oj-web/./src/views/UserLogin.vue?f291","webpack://oj-web/./src/components/AppNavbar.vue","webpack://oj-web/./src/components/AppNavbar.vue?f209","webpack://oj-web/./src/components/FooterView.vue","webpack://oj-web/./src/components/FooterView.vue?fb54","webpack://oj-web/./src/components/LayoutView.vue","webpack://oj-web/./src/views/HomeView.vue","webpack://oj-web/./src/views/HomeView.vue?1da1","webpack://oj-web/./src/views/ProgrammingLearning.vue","webpack://oj-web/./src/views/ProgrammingLearning.vue?6947","webpack://oj-web/./src/api/index.js","webpack://oj-web/./src/views/QuestionBank.vue","webpack://oj-web/./src/views/QuestionBank.vue?10a9","webpack://oj-web/./src/views/SmartQA.vue","webpack://oj-web/./src/views/SmartQA.vue?9e37","webpack://oj-web/./src/views/PersonalInfo.vue","webpack://oj-web/./src/views/PersonalInfo.vue?12d6","webpack://oj-web/./src/views/RegisterView.vue","webpack://oj-web/./src/views/RegisterView.vue?1ec6","webpack://oj-web/./src/components/CodeEditor.vue","webpack://oj-web/./src/components/CodeEditor.vue?afeb","webpack://oj-web/./src/views/RandomQuestion.vue","webpack://oj-web/./src/views/RandomQuestion.vue?0b17","webpack://oj-web/./src/components/AdminLayout.vue","webpack://oj-web/./src/components/AdminLayout.vue?2bc3","webpack://oj-web/./src/views/DashboardView.vue","webpack://oj-web/./src/views/DashboardView.vue?7280","webpack://oj-web/./src/views/ProblemManagement.vue","webpack://oj-web/./src/views/ProblemManagement.vue?8b02","webpack://oj-web/./src/views/SampleManagement.vue","webpack://oj-web/./src/views/SampleManagement.vue?d73e","webpack://oj-web/./src/views/TeacherLogin.vue","webpack://oj-web/./src/views/TeacherLogin.vue?c371","webpack://oj-web/./src/views/SubmissionManagement.vue","webpack://oj-web/./src/views/SubmissionManagement.vue?b795","webpack://oj-web/./src/views/UserManagement.vue","webpack://oj-web/./src/views/UserManagement.vue?8bda","webpack://oj-web/./src/views/CommentManagement.vue","webpack://oj-web/./src/views/CommentManagement.vue?7b2d","webpack://oj-web/./src/views/LeaderboardView.vue","webpack://oj-web/./src/views/LeaderboardView.vue?633e","webpack://oj-web/./src/components/ProblemDisplay.vue","webpack://oj-web/./src/components/ProblemDisplay.vue?619a","webpack://oj-web/./src/components/TestCaseDisplay.vue","webpack://oj-web/./src/components/TestCaseDisplay.vue?fe4d","webpack://oj-web/./src/views/DescriptionView.vue","webpack://oj-web/./src/views/DescriptionView.vue?6204","webpack://oj-web/./src/views/ProblemAnswers.vue","webpack://oj-web/./src/views/ProblemAnswers.vue?79fe","webpack://oj-web/./src/views/AiOptimization.vue","webpack://oj-web/./src/views/AiOptimization.vue?51a2","webpack://oj-web/./src/views/UserLeaderboardView.vue","webpack://oj-web/./src/views/UserLeaderboardView.vue?55e9","webpack://oj-web/./src/router/index.js","webpack://oj-web/./src/main.js","webpack://oj-web/webpack/bootstrap","webpack://oj-web/webpack/runtime/chunk loaded","webpack://oj-web/webpack/runtime/compat get default export","webpack://oj-web/webpack/runtime/define property getters","webpack://oj-web/webpack/runtime/global","webpack://oj-web/webpack/runtime/hasOwnProperty shorthand","webpack://oj-web/webpack/runtime/make namespace object","webpack://oj-web/webpack/runtime/jsonp chunk loading","webpack://oj-web/webpack/startup"],"sourcesContent":["import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6e51610c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createStore } from 'vuex'\r\n\r\n// 从 localStorage 恢复状态\r\nconst savedToken = localStorage.getItem('satoken')\r\nconst savedRole = localStorage.getItem('role')\r\nconst savedUser = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst store = createStore({\r\n  state: {\r\n    isLoggedIn: !!savedToken, // 如果 localStorage 中有 token 则视为已登录\r\n    user: savedUser || null,\r\n    satoken: savedToken || '',\r\n    role: savedRole || ''\r\n  },\r\n  mutations: {\r\n    login(state, payload) {\r\n      state.isLoggedIn = true\r\n      state.user = payload.user\r\n      state.satoken = payload.satoken\r\n      state.role = payload.role\r\n\r\n      // 持久化存储\r\n      localStorage.setItem('satoken', payload.satoken)\r\n      localStorage.setItem('role', payload.role)\r\n      localStorage.setItem('user', JSON.stringify(payload.user))\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false\r\n      state.user = null\r\n      state.satoken = ''\r\n      state.role = ''\r\n\r\n      // 清除本地存储\r\n      localStorage.removeItem('satoken')\r\n      localStorage.removeItem('role')\r\n      localStorage.removeItem('user')\r\n    }\r\n  },\r\n  actions: {\r\n    login({ commit }, credentials) {\r\n      return fetch('http://localhost:8080/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.code === 200) {\r\n            const user = data.data.user\r\n            const satoken = data.data.user.satoken\r\n            const role = data.data.user.role\r\n\r\n            // 存储到 Vuex 和 localStorage\r\n            commit('login', { user, satoken, role })\r\n          } else {\r\n            throw new Error(data.message)\r\n          }\r\n        })\r\n    },\r\n    logout({ commit }) {\r\n      commit('logout')\r\n    }\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => state.isLoggedIn,\r\n    user: state => state.user,\r\n    role: state => state.role,\r\n    satoken: state => state.satoken\r\n  }\r\n})\r\n\r\nexport default store\r\n","<template>\r\n  <div class=\"login-container\">\r\n    <h2>登录</h2>\r\n    <el-form :model=\"form\" label-width=\"120px\">\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"form.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\">\r\n        <el-input v-model=\"form.password\" type=\"password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">登录</el-button>\r\n        \r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-link  type=\"primary\" @click=\"goToRegister\">注册</el-link>\r\n        <el-link style=\"margin-left: 30px;\" type=\"primary\" @click=\"goToAdminLogin\">管理员登录</el-link>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\n  \r\nconst form = reactive({\r\n  username: '',\r\n  password: ''\r\n});\r\n\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nconst onSubmit = () => {\r\n  console.log('submit!', form);\r\n  store.dispatch('login', form)\r\n    .then(() => {\r\n      router.push('/');\r\n    })\r\n    .catch(error => {\r\n      console.error('登录失败:', error);\r\n      // 这里可以添加错误提示\r\n    });\r\n};\r\nconst goToAdminLogin = () => {\r\n  router.push('/teach-login');\r\n};\r\nconst goToRegister = () => {\r\n  router.push('/register');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 100px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n\r\n\r\n\r\n","import script from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=3fa5ce82&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3fa5ce82\"]])\n\nexport default __exports__","<template>\r\n  <nav class=\"navbar\">\r\n    <router-link class=\"logo\" to=\"/\">\r\n      <!-- <img src=\"@/assets/logo.png\" alt=\"\" /> -->\r\n    </router-link>\r\n    <el-menu\r\n      :default-active=\"activeIndex\"\r\n      class=\"el-menu-demo\"\r\n      mode=\"horizontal\"\r\n      style=\"border-bottom: 0 solid transparent;\"\r\n      @select=\"handleSelect\"\r\n    >\r\n      <el-menu-item index=\"Home\">编程学习</el-menu-item>\r\n      <el-menu-item index=\"QuestionBank\">题库</el-menu-item>\r\n      <el-menu-item index=\"SmartQA\">智能问答</el-menu-item>\r\n      <el-menu-item index=\"UserLeaderboardView\">排行榜</el-menu-item>\r\n      <el-menu-item index=\"PersonalInfo\">个人信息</el-menu-item>\r\n    </el-menu>\r\n    <div class=\"search-and-avatar\">\r\n      <!-- <el-input\r\n        v-model=\"input4\"\r\n        style=\"width: 240px\"\r\n        placeholder=\"Type something\"\r\n      >\r\n        <template #suffix>\r\n          <el-button style=\"margin-right: -10px; border-radius: 0;\" :icon=\"Search\" circle @click=\"handleSearchIconClick\" />\r\n        </template>\r\n      </el-input> -->\r\n      <div v-if=\"!isLoggedIn\" class=\"login-register-links\">\r\n        <router-link to=\"/login\">登录</router-link> |\r\n        <router-link to=\"/register\">注册</router-link>\r\n      </div>\r\n      <div v-else>\r\n        <el-popover\r\n          :width=\"200\"\r\n          popper-style=\"box-shadow: rgb(14 18 22 / 35%) 0px 10px 38px -10px, rgb(14 18 22 / 20%) 0px 10px 20px -15px; padding: 20px;\"\r\n        >\r\n          <template #reference>\r\n            <el-avatar :size=\"40\" :src=\"avatarUrl\" />\r\n          </template>\r\n          <template #default>\r\n            <div\r\n              class=\"demo-rich-content\"\r\n              style=\"display: flex; gap: 16px; flex-direction: column\"\r\n            >\r\n              <div>\r\n                <p\r\n                  class=\"demo-rich-content__name\"\r\n                  style=\"margin: 0; font-weight: 500\"\r\n                >\r\n                  {{ user.username }}\r\n                </p>\r\n                <p\r\n                  class=\"demo-rich-content__mention\"\r\n                  style=\"margin: 0; font-size: 14px; color: var(--el-color-info); white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\"\r\n                >\r\n                  {{ user.email }}\r\n                </p>\r\n                <p\r\n                  class=\"demo-rich-content__mention\"\r\n                  style=\"margin: 0; font-size: 14px; color: var(--el-color-info); white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\"\r\n                >\r\n                  学号: {{ user.studentNumber }}\r\n                </p>\r\n                <p\r\n                  class=\"demo-rich-content__mention\"\r\n                  style=\"margin: 0; font-size: 14px; color: var(--el-color-info)\"\r\n                >\r\n                  答题通过率: {{ (user.passRate * 100).toFixed(2) }}%\r\n                </p>\r\n                <el-button\r\n                  type=\"primary\"\r\n                  style=\"margin-top: 8px\"\r\n                  @click=\"store.dispatch('logout')\"\r\n                >\r\n                  退出登录\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-popover>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, computed } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\n// import { Search } from '@element-plus/icons-vue'\r\nimport txPng from '@/assets/tx.png'\r\nimport { useStore } from 'vuex'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst store = useStore()\r\n\r\nconst activeIndex = ref(route.name)\r\n// const input4 = ref('')\r\nconst avatarUrl = ref(txPng)\r\n\r\nwatch(\r\n  () => route.name,\r\n  (newName) => {\r\n    activeIndex.value = newName\r\n  }\r\n)\r\n\r\nconst handleSelect = (index) => {\r\n  switch (index) {\r\n    case 'Home':\r\n      router.push({ name: 'Home' })\r\n      break\r\n    case 'QuestionBank':\r\n      router.push({ name: 'QuestionBank' })\r\n      break\r\n    case 'SmartQA':\r\n      router.push({ name: 'SmartQA' })\r\n      break\r\n    case 'UserLeaderboardView':\r\n      router.push({ name: 'UserLeaderboardView' })\r\n      break\r\n    case 'PersonalInfo':\r\n      router.push({ name: 'PersonalInfo' })\r\n      break\r\n  }\r\n}\r\n\r\n// const handleSearchIconClick = () => {\r\n//   console.log(input4.value)\r\n// }\r\n\r\nconst isLoggedIn = computed(() => store.getters.isLoggedIn)\r\nconst user = computed(() => store.getters.user)\r\n</script>\r\n\r\n<style scoped>\r\n.logo {\r\n  width: 60px;\r\n  height: 60px;\r\n  background-image: url('@/assets/logo.png');\r\n  background-size: contain; \r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  background-color: #fff;\r\n  \r\n  position: relative;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.search-and-avatar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px; /* 添加间距 */\r\n}\r\n\r\n.navbar::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 2px;\r\n  background-color: #eaeaea;\r\n}\r\n\r\n.el-menu-demo {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.login-register-links {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 5px; /* 添加间距 */\r\n}\r\n\r\n.login-register-links a {\r\n  text-decoration: none;\r\n  color: #409EFF;\r\n  font-size: 12px;\r\n  white-space: nowrap; /* 防止文字换行 */\r\n}\r\n\r\n.login-register-links a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import script from \"./AppNavbar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppNavbar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AppNavbar.vue?vue&type=style&index=0&id=43c99566&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-43c99566\"]])\n\nexport default __exports__","<template>\r\n  <footer class=\"footer\">\r\n    <div class=\"container\">\r\n      <div class=\"footer-section\">\r\n        <h3>关于我们</h3>\r\n        <p>我们是一家致力于编程教育和技术支持的公司。</p>\r\n      </div>\r\n      <div class=\"footer-section\">\r\n        <h3>快速链接</h3>\r\n        <ul>\r\n          <li><router-link to=\"/\">首页</router-link></li>\r\n          <li><router-link to=\"/question-bank\">题库</router-link></li>\r\n          <!-- <li><router-link to=\"/about\">关于我们</router-link></li>\r\n          <li><router-link to=\"/contact\">联系我们</router-link></li> -->\r\n        </ul>\r\n      </div>\r\n      <div class=\"footer-section\">\r\n        <h3>联系方式</h3>\r\n        <ul>\r\n          <li>Email: <a href=\"mailto:support@example.com\">support@example.com</a></li>\r\n          <li>Phone: +123 456 7890</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"footer-section\">\r\n        <h3>关注我们</h3>\r\n        <div class=\"social-icons\">\r\n          <a href=\"https://www.facebook.com\" target=\"_blank\" aria-label=\"Facebook\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"https://www.twitter.com\" target=\"_blank\" aria-label=\"Twitter\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n          <a href=\"https://www.linkedin.com\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n            <i class=\"fab fa-linkedin-in\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"bottom-bar\">\r\n      <p>&copy; 2024 编程学习平台. All rights reserved.</p>\r\n    </div> -->\r\n  </footer>\r\n</template>\r\n\r\n<script setup>\r\n</script>\r\n\r\n<style scoped>\r\n.footer {\r\n  background-color: #f8f9fa;\r\n  padding: 40px 0 20px;\r\n  color: #333;\r\n  font-size: 14px;\r\n  border-top: 1px solid #eaeaea;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  flex-wrap: wrap; /* 确保在小屏幕上换行 */\r\n  gap: 20px;\r\n}\r\n\r\n.footer-section {\r\n  flex: 1;\r\n  min-width: 200px; /* 设置最小宽度，确保整齐布局 */\r\n}\r\n\r\n.footer-section h3 {\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.footer-section p,\r\n.footer-section ul,\r\n.footer-section li {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n.footer-section a {\r\n  text-decoration: none;\r\n  color: #333;\r\n}\r\n\r\n.footer-section a:hover {\r\n  color: #409EFF;\r\n}\r\n\r\n.social-icons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.social-icons a {\r\n  font-size: 20px;\r\n  color: #333;\r\n  text-decoration: none;\r\n}\r\n\r\n.social-icons a:hover {\r\n  color: #409EFF;\r\n}\r\n\r\n.bottom-bar {\r\n  text-align: center;\r\n  padding-top: 10px;\r\n  margin-top: 20px;\r\n  font-size: 12px;\r\n  color: #6c757d;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.bottom-bar p {\r\n  margin: 0;\r\n}\r\n</style>\r\n","import { render } from \"./FooterView.vue?vue&type=template&id=022c96b7&scoped=true\"\nconst script = {}\n\nimport \"./FooterView.vue?vue&type=style&index=0&id=022c96b7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-022c96b7\"]])\n\nexport default __exports__","import script from \"./LayoutView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LayoutView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LayoutView.vue?vue&type=style&index=0&id=71112044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71112044\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"home-container\">\r\n    <header class=\"hero-section\">\r\n      <h1>欢迎来到在线编程平台</h1>\r\n      <p>专注于C++学习与练习，提升你的编程技能。</p>\r\n      <el-button type=\"primary\" @click=\"goToRandomQuestion\">随机一题</el-button>\r\n    </header>\r\n\r\n    <section class=\"features-section\">\r\n      <h2>我们的特色功能</h2>\r\n      <div class=\"feature-card-grid\">\r\n        <div class=\"feature-card\">\r\n          <i class=\"fas fa-code\"></i>\r\n          <h3>C++ 随机一题</h3>\r\n          <p>每天挑战一道随机C++题目。</p>\r\n        </div>\r\n        <div class=\"feature-card\">\r\n          <i class=\"fas fa-book-reader\"></i>\r\n          <h3>详细解答</h3>\r\n          <p>每道题目都有详细的解答和解释。</p>\r\n        </div>\r\n        <div class=\"feature-card\">\r\n          <i class=\"fas fa-users\"></i>\r\n          <h3>社区支持</h3>\r\n          <p>加入我们的论坛和讨论组。</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"latest-courses-section\">\r\n      <h2>热门课程</h2>\r\n      <div class=\"course-card-grid\">\r\n        <div class=\"course-card\">\r\n          <img src=\"https://via.placeholder.com/150\" alt=\"Course Image\" />\r\n          <h3>C++ 基础教程</h3>\r\n          <p>适合初学者的C++入门课程。</p>\r\n        </div>\r\n        <div class=\"course-card\">\r\n          <img src=\"https://via.placeholder.com/150\" alt=\"Course Image\" />\r\n          <h3>C++ 进阶课程</h3>\r\n          <p>深入学习C++高级特性。</p>\r\n        </div>\r\n        <div class=\"course-card\">\r\n          <img src=\"https://via.placeholder.com/150\" alt=\"Course Image\" />\r\n          <h3>C++ 实战项目</h3>\r\n          <p>通过项目巩固C++知识。</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\n\r\nconst goToRandomQuestion = () => {\r\n  router.push('/random-question')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.hero-section {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 60px 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.hero-section h1 {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.hero-section p {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.features-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.features-section h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.feature-card-grid {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.feature-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  width: 250px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.feature-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.feature-card i {\r\n  font-size: 48px;\r\n  color: #409EFF;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.latest-courses-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.latest-courses-section h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.course-card-grid {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.course-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  width: 250px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.course-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.course-card img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=7d70a46c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d70a46c\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"programming-learning\">\r\n      <h1>编程学习</h1>\r\n      <p>这里是编程学习内容。</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .programming-learning {\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n  </style>\r\n  \r\n  \r\n  \r\n  ","import { render } from \"./ProgrammingLearning.vue?vue&type=template&id=d00fb508&scoped=true\"\nconst script = {}\n\nimport \"./ProgrammingLearning.vue?vue&type=style&index=0&id=d00fb508&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d00fb508\"]])\n\nexport default __exports__","import axios from 'axios';\r\nimport store from '@/store';\r\nimport { ElMessage } from 'element-plus';\r\nimport router from '@/router'; // 引入路由对象\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:8080',\r\n  timeout: 100000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// 请求拦截器\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const satoken = store.getters.satoken;\r\n    if (satoken) {\r\n      config.headers['satoken'] = satoken; // 设置请求头中的 satoken\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error); // 请求错误直接返回\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response; // 请求成功，直接返回响应数据\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n\r\n      // 处理未登录或登录失效（401）\r\n      if (status === 401) {\r\n        ElMessage.error(data.message || '未登录或登录失效，请重新登录');\r\n        store.commit('logout'); // 清除登录状态\r\n        router.push('/login'); // 跳转到登录页面\r\n      }\r\n\r\n      // 处理权限不足（403）\r\n      else if (status === 403) {\r\n        ElMessage.error(data.message || '权限不足，无法访问');\r\n      }\r\n\r\n      // 处理服务器内部错误（500）\r\n      else if (status === 500) {\r\n        ElMessage.error(data.message || '服务器内部错误，请稍后再试');\r\n      }\r\n\r\n      // 其他错误情况\r\n      else {\r\n        ElMessage.error(data.message || '请求失败，请稍后再试');\r\n      }\r\n    } else {\r\n      ElMessage.error('请求异常，请检查网络或服务器状态');\r\n    }\r\n\r\n    return Promise.reject(error); // 将错误继续抛出，方便后续处理\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n","<template>\r\n  <div class=\"question-bank\">\r\n    <div class=\"header\">\r\n      <h1>题库</h1>\r\n      <el-row class=\"filters\" type=\"flex\" align=\"middle\" justify=\"space-between\">\r\n        <!-- 筛选条件 -->\r\n        <el-col :span=\"6\">\r\n          <el-select v-model=\"filters.difficulty\" placeholder=\"选择难度\" clearable @change=\"fetchQuestions\">\r\n            <el-option label=\"简单\" value=\"简单\"></el-option>\r\n            <el-option label=\"中等\" value=\"中等\"></el-option>\r\n            <el-option label=\"困难\" value=\"困难\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"10\">\r\n          <el-input\r\n            v-model=\"filters.search\"\r\n            placeholder=\"搜索题目、编号或内容\"\r\n            clearable\r\n            @input=\"fetchQuestions\"\r\n            \r\n          />\r\n        </el-col>\r\n        <el-col :span=\"4\" style=\"text-align: right;\">\r\n          <el-button type=\"success\" @click=\"randomQuestion\">随机一题</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <el-table v-loading=\"loading\" :data=\"questions\"   border style=\"width: 100%;\">\r\n      <el-table-column prop=\"title\" label=\"题目\" width=\"250\">\r\n        <template #default=\"scope\">\r\n          <el-link :underline=\"false\" @click=\"viewQuestion(scope.row.id)\">{{ scope.row.title }}</el-link>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"tags\" label=\"标签\" width=\"180\">\r\n        <template #default=\"scope\">\r\n          <span v-for=\"tag in scope.row.tags.split(',')\" :key=\"tag\" class=\"tag\">{{ tag }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"difficulty\" label=\"难度\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getDifficultyTag(scope.row.difficulty)\">{{ scope.row.difficulty }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" type=\"primary\" @click=\"solveQuestion(scope.row.id)\">开始做题</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      v-if=\"pagination.total > 0\"\r\n      style=\"margin-top: 20px; text-align: right;\"\r\n      :current-page=\"pagination.current\"\r\n      :page-size=\"pagination.size\"\r\n      :total=\"pagination.total\"\r\n      layout=\"prev, pager, next\"\r\n      @current-change=\"handlePageChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport axios from \"@/api\";\r\nimport { useRouter } from \"vue-router\"; // 假设 API 模块定义在 `@/api`\r\n\r\nconst questions = ref([]);\r\nconst router = useRouter();\r\nconst loading = ref(false);\r\nconst pagination = reactive({\r\n  current: 1,\r\n  size: 5,\r\n  total: 0,\r\n});\r\nconst filters = reactive({\r\n  difficulty: null,\r\n  search: \"\",\r\n});\r\n\r\n// 获取题库数据\r\nconst fetchQuestions = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const res = await axios.get(\"/problems/page/user\", {\r\n      params: {\r\n        current: pagination.current,\r\n        size: pagination.size,\r\n        difficulty: filters.difficulty,\r\n        query: filters.search,\r\n      },\r\n    });\r\n\r\n    if (res.data.code === 200) {\r\n      questions.value = res.data.data.records;\r\n      pagination.total = res.data.data.total;\r\n    } else {\r\n      ElMessage.error(\"获取题目失败\");\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"获取题目失败\");\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 处理分页变化\r\nconst handlePageChange = (page) => {\r\n  pagination.current = page;\r\n  fetchQuestions();\r\n};\r\n\r\n// 难度标签颜色\r\nconst getDifficultyTag = (difficulty) => {\r\n  switch (difficulty) {\r\n    case \"简单\":\r\n      return \"success\";\r\n    case \"中等\":\r\n      return \"warning\";\r\n    case \"困难\":\r\n      return \"danger\";\r\n    default:\r\n      return \"info\";\r\n  }\r\n};\r\n\r\n// 查看题目详情\r\nconst viewQuestion = (id) => {\r\n  // 跳转到题目详情页面\r\n  router.push({ name: \"DescriptionView\", params: { id } });\r\n};\r\n\r\n// 开始做题\r\nconst solveQuestion = (id) => {\r\n  // 跳转到题目详情页面\r\n  router.push({ name: \"DescriptionView\", params: { id } });\r\n};\r\n\r\n// 随机一题\r\nconst randomQuestion = () => {\r\n  if (questions.value.length > 0) {\r\n    const randomId = questions.value[Math.floor(Math.random() * questions.value.length)].id;\r\n    solveQuestion(randomId);\r\n  } else {\r\n    ElMessage.warning(\"当前无题目可选\");\r\n  }\r\n};\r\n\r\n// 初次加载数据\r\nonMounted(fetchQuestions);\r\n</script>\r\n\r\n<style scoped>\r\n.question-bank {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tag {\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  padding: 2px 6px;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  color: #666;\r\n}\r\n</style>\r\n","import script from \"./QuestionBank.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QuestionBank.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QuestionBank.vue?vue&type=style&index=0&id=45fb8aa5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-45fb8aa5\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"submissions-container\">\r\n    <h1>用户提交记录</h1>\r\n\r\n    <!-- 提交记录表 -->\r\n    <el-table :data=\"submissionsData.records\" style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"记录ID\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"problemId\" label=\"题目ID\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"runtime\" label=\"运行时间 (ms)\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"memory\" label=\"内存使用 (KB)\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"score\" label=\"分数\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"duplicationRate\" label=\"查重\" width=\"150\"></el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <el-button type=\"primary\" @click=\"aiScore(scope.row.id)\">AI评分</el-button>\r\n          <el-button type=\"success\" @click=\"optimizeCode(scope.row.id)\">代码优化建议</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      background\r\n      layout=\"prev, pager, next\"\r\n      :current-page=\"submissionsData.current\"\r\n      :page-size=\"submissionsData.size\"\r\n      :total=\"submissionsData.total\"\r\n      @current-change=\"fetchSubmissions\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 加载状态 -->\r\n    <el-dialog v-model=\"loading\" width=\"30%\" center>\r\n      <div style=\"text-align: center;\">\r\n        <el-icon><Loading /></el-icon>\r\n        <p>AI正在处理，请稍候...</p>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from '@/api'\r\nimport { useRouter } from 'vue-router'\r\nimport { Loading } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus';\r\nconst submissionsData = ref({\r\n  records: [],\r\n  total: 0,\r\n  size: 10,\r\n  current: 1,\r\n}) // 存储提交记录分页数据\r\nconst loading = ref(false) // 控制加载状态\r\nconst router = useRouter()\r\n\r\n// 获取用户提交记录\r\nconst fetchSubmissions = async (currentPage = 1) => {\r\n  try {\r\n    const response = await axios.get(`/submissions/page/user`, {\r\n      params: {\r\n        current: currentPage,\r\n        size: submissionsData.value.size,\r\n      },\r\n    })\r\n    if (response.data.code === 200) {\r\n      submissionsData.value = response.data.data // 更新分页数据\r\n    } else {\r\n      console.error('获取提交记录失败:', response.data.message)\r\n    }\r\n  } catch (error) {\r\n    console.error('获取提交记录失败:', error.message)\r\n  }\r\n}\r\n\r\n// AI评分功能\r\nconst aiScore = async (id) => {\r\n  loading.value = true // 显示加载状态\r\n  try {\r\n    const response = await axios.post(`/ai/score-submission/${id}`) // 假设后端AI评分API路径\r\n    if (response.data.code === 200) {\r\n      loading.value = false\r\n      ElMessage.success('AI评分完成')\r\n      fetchSubmissions()\r\n    } else {\r\n      loading.value = false\r\n      ElMessage.error(`评分失败: ${response.data.message}`)\r\n    }\r\n  } catch (error) {\r\n    loading.value = false\r\n    ElMessage.error(`评分失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 跳转到AI优化详情页\r\nconst optimizeCode = (id) => {\r\n  if (!id) {\r\n    console.error('Invalid ID provided for optimization.');\r\n    return;\r\n  }\r\n  router.push({ name: 'AiOptimization', params: { id } }) // 使用路由的名称和 params 传递 ID\r\n    .catch((err) => {\r\n      if (err.name !== 'NavigationDuplicated') {\r\n        console.error('Failed to navigate to AI Optimization page:', err);\r\n      }\r\n    });\r\n};\r\n\r\n\r\n// 页面挂载时获取数据\r\nonMounted(() => fetchSubmissions())\r\n</script>\r\n\r\n<style scoped>\r\n.submissions-container {\r\n  padding: 20px;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 20px;\r\n}\r\n\r\n.el-pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n","import script from \"./SmartQA.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SmartQA.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SmartQA.vue?vue&type=style&index=0&id=2999dc81&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2999dc81\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"personal-info\">\r\n    <h1>个人信息</h1>\r\n\r\n    <!-- 展示用户信息 -->\r\n    <el-card class=\"user-info-card\" shadow=\"hover\">\r\n      <div>\r\n        <p><strong>用户名：</strong>{{ user.username }}</p>\r\n        <p><strong>学号：</strong>{{ user.studentNumber }}</p>\r\n        <p><strong>邮箱：</strong>{{ user.email }}</p>\r\n        <p><strong>角色：</strong>{{ user.role }}</p>\r\n        <p><strong>等级：</strong>{{ user.level }}</p>\r\n        <p><strong>总提交数：</strong>{{ user.totalSubmissions }}</p>\r\n        <p><strong>通过数：</strong>{{ user.successfulSubmissions }}</p>\r\n        <p><strong>总得分：</strong>{{ user.totalScore }}</p>\r\n      </div>\r\n      <el-button type=\"primary\" @click=\"openEditDialog\">修改信息</el-button>\r\n    </el-card>\r\n\r\n    <!-- 编辑信息弹出框 -->\r\n    <el-dialog v-model=\"editDialogVisible\" title=\"修改个人信息\">\r\n      <el-form ref=\"editForm\" :model=\"editUser\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"editUser.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"学号\" prop=\"studentId\">\r\n          <el-input v-model=\"editUser.studentNumber\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"editUser.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"editUser.password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitEdit\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from \"vue\";\r\nimport axios from \"@/api\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nconst user = reactive({\r\n  id: null,\r\n  username: \"\",\r\n  studentNumber: \"\",\r\n  email: \"\",\r\n  role: \"\",\r\n  level: 0,\r\n  totalSubmissions: 0,\r\n  successfulSubmissions: 0,\r\n  totalScore: 0,\r\n});\r\n\r\nconst editUser = reactive({\r\n  username: \"\",\r\n  studentId: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  studentNumber: \"\",\r\n});\r\n\r\nconst editDialogVisible = ref(false);\r\nconst editForm = ref(null); // 正确定义 editForm\r\n\r\nconst rules = {\r\n  username: [{ required: true, message: \"请输入用户名\", trigger: \"blur\" }],\r\n  email: [{ required: true, message: \"请输入邮箱\", trigger: \"blur\", type: \"email\" }],\r\n  password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n  studentNumber: [{ required: true, message: \"请输入学号\", trigger: \"blur\" }],\r\n};\r\n\r\n// 获取用户信息\r\nconst fetchUserInfo = async () => {\r\n  try {\r\n    const res = await axios.get(\"/users/getUserByLogin\");\r\n    if (res.data.code === 200) {\r\n      Object.assign(user, res.data.data.user);\r\n    } else {\r\n      ElMessage.error(\"获取用户信息失败：\" + res.data.message);\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"获取用户信息失败：\" + error.message);\r\n  }\r\n};\r\n\r\n// 打开编辑弹出框\r\nconst openEditDialog = () => {\r\n  editUser.username = user.username;\r\n  editUser.studentNumber = user.studentNumber;\r\n  editUser.email = user.email;\r\n  editUser.password = user.password;\r\n  editDialogVisible.value = true;\r\n};\r\n\r\n// 提交修改\r\nconst submitEdit = async () => {\r\n  if (!editForm.value) {\r\n    ElMessage.error(\"表单未初始化\");\r\n    return;\r\n  }\r\n\r\n  editForm.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const res = await axios.put(\"/users/updateUser\", {\r\n          id: user.id,\r\n          username: editUser.username,\r\n          studentNumber: editUser.studentNumber,\r\n          email: editUser.email,\r\n          password: editUser.password,\r\n        });\r\n        if (res.data.code === 200) {\r\n          ElMessage.success(\"更新成功\");\r\n          editDialogVisible.value = false;\r\n          fetchUserInfo(); // 更新用户信息\r\n        } else {\r\n          ElMessage.error(\"更新失败：\" + res.data.message);\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error(\"更新失败：\" + error.message);\r\n      }\r\n    } else {\r\n      ElMessage.error(\"表单校验失败\");\r\n    }\r\n  });\r\n};\r\n\r\n// 初始加载\r\nonMounted(() => {\r\n  fetchUserInfo();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.personal-info {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.user-info-card {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import script from \"./PersonalInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonalInfo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonalInfo.vue?vue&type=style&index=0&id=042ad915&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-042ad915\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"register-container\">\r\n      <el-card class=\"box-card\">\r\n        <h2>注册</h2>\r\n        <el-form ref=\"ruleForm\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"电子邮件\" prop=\"email\">\r\n            <el-input v-model=\"form.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input v-model=\"form.password\" type=\"password\" show-password></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input v-model=\"form.confirmPassword\" type=\"password\" show-password></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"学号\" prop=\"studentNumber\">\r\n            <el-input v-model=\"form.studentNumber\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">注册</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue'\r\n  import { useRouter } from 'vue-router'\r\n  import { ElMessage } from 'element-plus'\r\n  import axios from 'axios'\r\n  \r\n  const router = useRouter()\r\n  \r\n  const form = ref({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    studentNumber: ''\r\n  })\r\n  \r\n  const validatePass = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请输入密码'))\r\n    } else {\r\n      if (form.value.confirmPassword !== '') {\r\n        ruleForm.value.validateField('confirmPassword')\r\n      }\r\n      callback()\r\n    }\r\n  }\r\n  \r\n  const validatePass2 = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请再次输入密码'))\r\n    } else if (value !== form.value.password) {\r\n      callback(new Error('两次输入密码不一致!'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  \r\n  const rules = ref({\r\n    username: [\r\n      { required: true, message: '请输入用户名', trigger: 'blur' },\r\n      { min: 3, max: 15, message: '长度在 3 到 15 个字符', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      { required: true, message: '请输入电子邮件地址', trigger: 'blur' },\r\n      { type: 'email', message: '请输入正确的电子邮件地址', trigger: 'blur' }\r\n    ],\r\n    password: [\r\n      { validator: validatePass, trigger: 'blur' }\r\n    ],\r\n    confirmPassword: [\r\n      { validator: validatePass2, trigger: 'blur' }\r\n    ],\r\n    studentNumber: [\r\n      { required: false, message: '请输入学号', trigger: 'blur' }\r\n    ]\r\n  })\r\n  \r\n  const submitForm = async () => {\r\n    ruleForm.value.validate(async (valid) => {\r\n      if (valid) {\r\n        try {\r\n          const response = await axios.post('http://localhost:8080/users/student/register', form.value)\r\n          if (response.status === 200) {\r\n            ElMessage.success('注册成功!')\r\n            router.push('/login') // 注册成功后跳转到登录页\r\n          } else {\r\n            ElMessage.error('注册失败，请重试')\r\n          }\r\n        } catch (error) {\r\n          console.error('注册失败:', error)\r\n          ElMessage.error('注册失败，请检查网络或联系管理员')\r\n        }\r\n      } else {\r\n        console.log('验证失败!')\r\n        return false\r\n      }\r\n    })\r\n  }\r\n  \r\n  const resetForm = () => {\r\n    ruleForm.value.resetFields()\r\n  }\r\n  \r\n  const ruleForm = ref(null)\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .register-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-color: #f0f2f5;\r\n  }\r\n  \r\n  .box-card {\r\n    width: 400px;\r\n    padding: 20px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .el-form-item__label {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .el-button {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import script from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RegisterView.vue?vue&type=style&index=0&id=8b3b4126&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8b3b4126\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"code-editor-container\">\r\n      <el-card class=\"box-card\">\r\n          <h2>C++ 代码编辑器</h2>\r\n          <codemirror\r\n              class=\"code-mirror\"\r\n              :model-value=\"modelValue\" \r\n              :options=\"cmOptions\"\r\n              @update:model-value=\"updateValue\" \r\n          />\r\n      </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineEmits ,ref} from 'vue'\r\nimport { Codemirror } from 'vue-codemirror'\r\nimport { cpp } from '@codemirror/lang-cpp'\r\nimport { oneDark } from '@codemirror/theme-one-dark'\r\nimport { basicSetup } from '@codemirror/basic-setup'\r\n\r\n// 接收父组件传入的值\r\n// const props = defineProps({\r\n//   modelValue: {\r\n//       type: String,\r\n//       required: true,\r\n//       default: '',\r\n//   },\r\n// })\r\nconst modelValue = ref('\\n'.repeat(15))\r\n// 发射事件更新父组件的值\r\nconst emit = defineEmits(['update:modelValue'])\r\n\r\n// 更新代码内容\r\nconst updateValue = (newValue) => {\r\n  emit('update:modelValue', newValue)\r\n}\r\n\r\n// 编辑器配置项\r\nconst cmOptions = {\r\n  extensions: [basicSetup, cpp(), oneDark],\r\n  tabSize: 2,\r\n  indentWithTab: true,\r\n  lineNumbers: true,\r\n  styleActiveLine: true,\r\n  lineWrap: true,\r\n  foldGutter: true,\r\n  scrollbarStyle: 'simple',\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 容器样式 */\r\n.code-editor-container {\r\n  background-color: #f7f7f7;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 代码编辑器外框 */\r\n.box-card {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n/* 标题 */\r\nh2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* CodeMirror 编辑器样式 */\r\n.code-mirror {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n  font-family: 'Fira Code', monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 自定义 CodeMirror 行号背景色 */\r\n::v-deep(.cm-gutters) {\r\n  background-color: white !important;\r\n  color: #333;\r\n  border-right: 1px solid #ddd;\r\n}\r\n</style>\r\n","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CodeEditor.vue?vue&type=style&index=0&id=20cee220&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-20cee220\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"random-question-container\">\r\n      <h1>随机一题</h1>\r\n      <p>以下是一道随机生成的C++题目：</p>\r\n      <pre>{{ question }}</pre>\r\n      <CodeEditor @submit-code=\"handleSubmitCode\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue'\r\n  import { ElMessage } from 'element-plus'\r\n  import CodeEditor from '../components/CodeEditor.vue'\r\n  \r\n  const question = ref(`编写一个函数来反转字符串中的单词顺序。\\n例如，输入 \"hello world\" 应输出 \"world hello\"`)\r\n  \r\n  const handleSubmitCode = async (code) => {\r\n    try {\r\n      // 这里可以添加实际的提交逻辑，比如调用 API 发送代码\r\n      const response = await fetch('http://localhost:8080/submissions/test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ code })\r\n      })\r\n  \r\n      if (response.ok) {\r\n        const result = await response.json()\r\n        ElMessage.success('代码提交成功!')\r\n        console.log(result)\r\n      } else {\r\n        ElMessage.error('代码提交失败，请重试')\r\n      }\r\n    } catch (error) {\r\n      console.error('提交代码时出错:', error)\r\n      ElMessage.error('提交代码时出错，请检查网络或联系管理员')\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .random-question-container {\r\n    text-align: left;\r\n    padding: 20px;\r\n    background-color: #f0f2f5;\r\n  }\r\n  \r\n  pre {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n  }\r\n  </style>\r\n  \r\n  \r\n  \r\n  ","import script from \"./RandomQuestion.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RandomQuestion.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RandomQuestion.vue?vue&type=style&index=0&id=32b957ec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-32b957ec\"]])\n\nexport default __exports__","<template>\r\n    <el-container style=\"height: 100vh;\">\r\n        <!-- 侧边栏 -->\r\n        <el-aside width=\"200px\" class=\"sidebar\">\r\n            <div class=\"logo\">OJ平台管理</div>\r\n            <el-menu :default-active=\"activeMenu\" class=\"el-menu-vertical-demo\" router>\r\n                <el-menu-item index=\"/admin/dashboard\">\r\n                    <el-icon>\r\n                        <House />\r\n                    </el-icon>\r\n                    <span>仪表盘</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/problems\">\r\n                    <el-icon>\r\n                        <Document />\r\n                    </el-icon>\r\n                    <span>题目管理</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/problem-answers\">\r\n                    <el-icon>\r\n                        <Document />\r\n                    </el-icon>\r\n                    <span>题目答案管理</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/problem-samples\">\r\n                    <el-icon>\r\n                        <Edit />\r\n                    </el-icon>\r\n                    <span>示例测试管理</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/comment\">\r\n                    <el-icon>\r\n                        <Cpu />\r\n                    </el-icon>\r\n                    <span>评论管理</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/submissions\">\r\n                    <el-icon>\r\n                        <Upload />\r\n                    </el-icon>\r\n                    <span>提交管理</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/rankings\">\r\n                    <el-icon>\r\n                        <Rank />\r\n                    </el-icon>\r\n                    <span>排行榜</span>\r\n                </el-menu-item>\r\n                <el-menu-item index=\"/admin/user\">\r\n                    <el-icon>\r\n                        <User />\r\n                    </el-icon>\r\n                    <span>用户管理</span>\r\n                </el-menu-item>\r\n            </el-menu>\r\n        </el-aside>\r\n\r\n        <!-- 主内容区域 -->\r\n        <el-container>\r\n            <!-- 顶部导航栏 -->\r\n            <el-header class=\"header\">\r\n                <el-breadcrumb separator=\"/\">\r\n                    <el-breadcrumb-item>管理后台</el-breadcrumb-item>\r\n                    <el-breadcrumb-item>{{ breadcrumbTitle }}</el-breadcrumb-item>\r\n                </el-breadcrumb>\r\n                <div class=\"user-info\">\r\n                    <el-avatar :size=\"40\" src=\"https://via.placeholder.com/40\" />\r\n                    <span class=\"username\">管理员</span>\r\n                    <el-dropdown>\r\n                        <span class=\"el-dropdown-link\">\r\n                            设置\r\n                            <el-icon>\r\n                                <ArrowDown />\r\n                            </el-icon>\r\n                        </span>\r\n                        <template #dropdown>\r\n                            <el-dropdown-menu>\r\n                                <el-dropdown-item @click=\"logout\">退出登录</el-dropdown-item>\r\n                            </el-dropdown-menu>\r\n                        </template>\r\n                    </el-dropdown>\r\n                </div>\r\n            </el-header>\r\n\r\n            <!-- 内容显示区 -->\r\n            <el-main class=\"main-content\">\r\n                <router-view />\r\n            </el-main>\r\n\r\n            <!-- 底部 -->\r\n            <el-footer class=\"footer\">\r\n                © 2024 OJ平台管理系统 | 技术支持：C++OJ平台\r\n            </el-footer>\r\n        </el-container>\r\n    </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { House, Document, Edit, Cpu, Upload, Rank, User, ArrowDown } from '@element-plus/icons-vue';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n// 动态显示当前面包屑标题\r\nconst breadcrumbTitle = computed(() => {\r\n    const titles = {\r\n        '/dashboard': '仪表盘',\r\n        '/problems': '题目管理',\r\n        '/samples': '示例测试管理',\r\n        '/ai-assist': 'AI辅助评分',\r\n        '/submissions': '提交管理',\r\n        '/rankings': '排行榜',\r\n        '/users': '用户管理',\r\n    };\r\n    return titles[route.path] || '首页';\r\n});\r\n\r\n// 获取当前活动菜单项\r\nconst activeMenu = computed(() => route.path);\r\n\r\n// 退出登录\r\nconst logout = () => {\r\n    console.log('退出登录');\r\n    router.push('/teach-login');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局样式 */\r\n.el-container {\r\n    --el-aside-width: 200px;\r\n}\r\n\r\n/* 左侧菜单栏样式 */\r\n.sidebar {\r\n    background-color: #001529;\r\n    color: #ffffff;\r\n    height: 100vh;\r\n}\r\n\r\n.logo {\r\n    text-align: center;\r\n    line-height: 60px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n    background-color: #002140;\r\n}\r\n\r\n.el-menu {\r\n    border-right: none;\r\n    height: calc(100% - 60px);\r\n    background-color: #001529;\r\n}\r\n\r\n.el-menu-item {\r\n    color: #ffffff;\r\n}\r\n\r\n.el-menu-item:hover,\r\n.el-menu-item.is-active {\r\n    background-color: #409bf1;\r\n    color: #000;\r\n}\r\n\r\n/* 顶部导航栏样式 */\r\n.header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    background-color: #ffffff;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.user-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.el-dropdown-link {\r\n    cursor: pointer;\r\n}\r\n\r\n/* 内容区样式 */\r\n.main-content {\r\n    padding: 20px;\r\n    background-color: #f5f5f5;\r\n}\r\n\r\n/* 底部样式 */\r\n.footer {\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    background-color: #ffffff;\r\n    border-top: 1px solid #f0f0f0;\r\n}\r\n</style>","import script from \"./AdminLayout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminLayout.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AdminLayout.vue?vue&type=style&index=0&id=73f9eed9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73f9eed9\"]])\n\nexport default __exports__","<template>\r\n  <div style=\"padding: 20px; max-width: 1200px; margin: auto;\">\r\n    <!-- 页面标题 -->\r\n    <h2 style=\"text-align: center; margin-bottom: 20px;\">仪表盘</h2>\r\n\r\n    <!-- 数据统计卡片 -->\r\n    <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div class=\"stat-item\">\r\n            <el-icon><Document /></el-icon>\r\n            <div>\r\n              <p class=\"stat-title\">题目总数</p>\r\n              <p class=\"stat-value\">{{ stats.problemCount }}</p>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div class=\"stat-item\">\r\n            <el-icon><Upload /></el-icon>\r\n            <div>\r\n              <p class=\"stat-title\">提交总数</p>\r\n              <p class=\"stat-value\">{{ stats.submissionCount }}</p>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div class=\"stat-item\">\r\n            <el-icon><Check /></el-icon>\r\n            <div>\r\n              <p class=\"stat-title\">通过总数</p>\r\n              <p class=\"stat-value\">{{ stats.acceptedCount }}</p>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div class=\"stat-item\">\r\n            <el-icon><User /></el-icon>\r\n            <div>\r\n              <p class=\"stat-title\">用户总数</p>\r\n              <p class=\"stat-value\">{{ stats.userCount }}</p>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 最近提交记录 -->\r\n    <el-card shadow=\"hover\" style=\"margin-bottom: 20px;\">\r\n      <template #header>\r\n        <span>最近提交记录</span>\r\n      </template>\r\n      <el-table :data=\"recentSubmissions\" style=\"width: 100%\" border>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n        <el-table-column prop=\"problemId\" label=\"题目\" width=\"300\" />\r\n        <el-table-column prop=\"userId\" label=\"提交用户\" width=\"150\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusTag(scope.row.status)\">{{ scope.row.status }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"runtime\" label=\"运行时间 (ms)\" width=\"150\" />\r\n        <el-table-column prop=\"createdAt\" label=\"提交时间\" />\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <!-- 快捷操作 -->\r\n    <el-row :gutter=\"20\" justify=\"center\">\r\n      <el-col :span=\"8\">\r\n        <el-button type=\"primary\" style=\"width: 100%;\" @click=\"goToPage('/problems')\">题目管理</el-button>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-button type=\"success\" style=\"width: 100%;\" @click=\"goToPage('/submissions')\">提交管理</el-button>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-button type=\"warning\" style=\"width: 100%;\" @click=\"goToPage('/rankings')\">查看排行榜</el-button>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from '@/api';\r\nimport { Document, Upload, Check, User } from '@element-plus/icons-vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\n\r\n// 统计数据\r\nconst stats = ref({\r\n  problemCount: 0,\r\n  submissionCount: 0,\r\n  acceptedCount: 0,\r\n  userCount: 0,\r\n});\r\n\r\n// 最近提交记录\r\nconst recentSubmissions = ref([]);\r\n\r\n// 获取统计数据\r\nconst fetchStats = () => {\r\n  axios.get('/dashboard/stats').then((res) => {\r\n    stats.value = res.data.data; // 使用 API 返回数据\r\n  });\r\n};\r\n\r\n// 获取最近提交记录\r\nconst fetchRecentSubmissions = () => {\r\n  axios.get('/dashboard/recent-submissions').then((res) => {\r\n    recentSubmissions.value = res.data.data || [];\r\n  });\r\n};\r\n\r\n// 状态标签颜色映射\r\nconst getStatusTag = (status) => {\r\n  if (status === 'Accepted') return 'success';\r\n  if (status === 'Wrong Answer') return 'danger';\r\n  return 'warning';\r\n};\r\n\r\n// 页面跳转\r\nconst goToPage = (path) => {\r\n  router.push(path);\r\n};\r\n\r\n// 加载数据\r\nonMounted(() => {\r\n  fetchStats();\r\n  fetchRecentSubmissions();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.stat-item .el-icon {\r\n  font-size: 30px;\r\n  color: #409eff;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-card {\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\n.el-card:hover {\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n","import script from \"./DashboardView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DashboardView.vue?vue&type=style&index=0&id=773f1693&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-773f1693\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <!-- 搜索和操作区域 -->\r\n        <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n            <el-col :span=\"12\">\r\n                <!-- 搜索框 -->\r\n                <el-input v-model=\"searchQuery\" placeholder=\"搜索题目...\" style=\"width: 300px; margin-right: 10px;\" />\r\n                <el-button type=\"primary\" @click=\"fetchProblems\">搜索</el-button>\r\n            </el-col>\r\n            <el-col :span=\"12\" style=\"text-align: right;\">\r\n                <!-- 操作按钮 -->\r\n                <el-button type=\"primary\" @click=\"openAddDialog\">添加题目</el-button>\r\n                <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelected\">批量删除</el-button>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 题目表格 -->\r\n        <el-table :data=\"problems\" border style=\"width: 100%;\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n            <el-table-column prop=\"title\" label=\"题目标题\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"difficulty\" label=\"难度\" width=\"100\"></el-table-column>\r\n            <el-table-column label=\"描述\" width=\"200\">\r\n                <template #default=\"scope\">\r\n                    <el-tooltip effect=\"dark\" :content=\"scope.row.description\" placement=\"top\">\r\n                        <span class=\"truncate-text\">{{ scope.row.description }}</span>\r\n                    </el-tooltip>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"输入描述\" width=\"200\">\r\n                <template #default=\"scope\">\r\n                    <el-tooltip effect=\"dark\" :content=\"scope.row.inputDescription\" placement=\"top\">\r\n                        <span class=\"truncate-text\">{{ scope.row.inputDescription }}</span>\r\n                    </el-tooltip>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"输出描述\" width=\"200\">\r\n                <template #default=\"scope\">\r\n                    <el-tooltip effect=\"dark\" :content=\"scope.row.outputDescription\" placement=\"top\">\r\n                        <span class=\"truncate-text\">{{ scope.row.outputDescription }}</span>\r\n                    </el-tooltip>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"tags\" label=\"标签\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"时间/内存限制\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                    {{ scope.row.timeLimit }} ms / {{ scope.row.memoryLimit }} KB\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"visible\" label=\"可见性\" width=\"100\">\r\n                <template #default=\"scope\">\r\n                    {{ scope.row.visible ? '可见' : '隐藏' }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"300\">\r\n                <template #default=\"scope\">\r\n                    <el-button size=\"small\" type=\"primary\" @click=\"editProblem(scope.row)\">编辑</el-button>\r\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteProblem(scope.row.id)\">删除</el-button>\r\n                    <el-dropdown size=\"small\" style=\"margin-left: 10px;\" type=\"success\" @command=\"handleDropdownCommand($event, scope.row)\">\r\n                        <el-button size=\"small\" type=\"success\">操作</el-button>\r\n                        <template #dropdown>\r\n                            <el-dropdown-menu>\r\n                                <el-dropdown-item command=\"manageSamples\">管理示例</el-dropdown-item>\r\n                                <el-dropdown-item command=\"viewSubmissions\">查看提交</el-dropdown-item>\r\n                                <el-dropdown-item command=\"manageAnswers\">管理答案</el-dropdown-item>\r\n                                <el-dropdown-item command=\"checkDuplicates\">已提交查重</el-dropdown-item>\r\n                            </el-dropdown-menu>\r\n                        </template>\r\n                    </el-dropdown>\r\n\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row style=\"margin-top: 10px;\" type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n            <el-col :span=\"2\"> <!-- 调整 span 值以适应页面宽度 -->\r\n                <el-select v-model=\"page.size\" placeholder=\"每页显示\" style=\"width: 100%;\" @change=\"handlePageSizeChange\">\r\n                    <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n                    <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n                    <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n                    <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n                </el-select>\r\n            </el-col>\r\n            <el-col :span=\"16\"> <!-- 调整 span 值以适应页面宽度 -->\r\n                <el-pagination\r\n:current-page=\"page.current\" :page-size=\"page.size\" :total=\"page.total\"\r\n                    layout=\"prev, pager, next\" style=\"text-align: right;\" @current-change=\"handlePageChange\" />\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 添加/编辑弹窗 -->\r\n        <el-dialog v-model=\"dialogVisible\" :title=\"isEdit ? '编辑题目' : '添加题目'\">\r\n            <el-form :model=\"form\">\r\n                <el-form-item label=\"标题\">\r\n                    <el-input v-model=\"form.title\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"描述\">\r\n                    <el-input v-model=\"form.description\" type=\"textarea\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"输入描述\">\r\n                    <el-input v-model=\"form.inputDescription\" type=\"textarea\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"输出描述\">\r\n                    <el-input v-model=\"form.outputDescription\" type=\"textarea\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"标签\">\r\n                    <el-input v-model=\"form.tags\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"时间限制\">\r\n                    <el-input v-model=\"form.timeLimit\" type=\"number\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"内存限制\">\r\n                    <el-input v-model=\"form.memoryLimit\" type=\"number\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"难度\">\r\n                    <el-select v-model=\"form.difficulty\">\r\n                        <el-option label=\"简单\" value=\"简单\"></el-option>\r\n                        <el-option label=\"中等\" value=\"中等\"></el-option>\r\n                        <el-option label=\"困难\" value=\"困难\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"可见性\">\r\n                    <el-switch v-model=\"form.visible\"></el-switch>\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"saveProblem\">保存</el-button>\r\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/api';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst searchQuery = ref('');\r\nconst problems = ref([]);\r\nconst selectedRows = ref([]);\r\nconst dialogVisible = ref(false);\r\nconst isEdit = ref(false);\r\nconst form = reactive({ id: null, title: '', description: '', inputDescription: '', outputDescription: '', tags: '', timeLimit: 1000, memoryLimit: 10240, difficulty: '简单', visible: true });\r\nconst page = reactive({ current: 1, size: 5, total: 0 });\r\n\r\nconst fetchProblems = async () => {\r\n    try {\r\n        const res = await axios.get('/problems/page', { params: { query: searchQuery.value, current: page.current, size: page.size } });\r\n        problems.value = res.data.data.records;\r\n        page.total = res.data.data.total;\r\n    } catch (error) {\r\n        ElMessage.error('获取题目列表失败');\r\n    }\r\n};\r\n\r\nconst handlePageChange = (pageNum) => {\r\n    page.current = pageNum;\r\n    fetchProblems();\r\n};\r\nconst handlePageSizeChange = (size) => {\r\n    page.size = size;\r\n    page.current = 1;\r\n    fetchProblems();\r\n};\r\n\r\nconst openAddDialog = () => {\r\n    isEdit.value = false;\r\n    Object.assign(form, { id: null, title: '', description: '', inputDescription: '', outputDescription: '', tags: '', timeLimit: 1000, memoryLimit: 10240, difficulty: '简单', visible: true });\r\n    dialogVisible.value = true;\r\n};\r\n\r\nconst editProblem = (problem) => {\r\n    isEdit.value = true;\r\n    Object.assign(form, problem);\r\n    dialogVisible.value = true;\r\n};\r\n\r\nconst saveProblem = async () => {\r\n    try {\r\n        if (isEdit.value) {\r\n            await axios.put('/problems/updateById', form);\r\n            ElMessage.success('题目更新成功');\r\n        } else {\r\n            await axios.post('/problems/create', form);\r\n            ElMessage.success('题目添加成功');\r\n        }\r\n        dialogVisible.value = false;\r\n        fetchProblems();\r\n    } catch (error) {\r\n        ElMessage.error('保存失败');\r\n    }\r\n};\r\n\r\nconst deleteProblem = async (id) => {\r\n    try {\r\n        await axios.delete(`/problems/deleteById/${id}`);\r\n        ElMessage.success('删除成功');\r\n        fetchProblems();\r\n    } catch (error) {\r\n        ElMessage.error('删除失败');\r\n    }\r\n};\r\n\r\nconst deleteSelected = async () => {\r\n    try {\r\n        const ids = selectedRows.value.map(row => row.id);\r\n        await axios.post('/problems/deleteBatch', ids);\r\n        ElMessage.success('批量删除成功');\r\n        fetchProblems();\r\n    } catch (error) {\r\n        ElMessage.error('批量删除失败');\r\n    }\r\n};\r\n\r\nconst handleSelectionChange = (rows) => {\r\n    selectedRows.value = rows;\r\n};\r\n\r\nconst goToSamples = (id) => {\r\n    router.push(`/admin/problem-samples/${id}`);\r\n};\r\n\r\nconst checkDuplicates = async (problemId) => {\r\n    try {\r\n        // 调用后端查重接口\r\n        await axios.post(`/submissions/similarity/compute/${problemId}`);\r\n        ElMessage.success('查重完成并已更新重复率');\r\n        \r\n        // 查重成功后跳转至已提交记录页面\r\n        router.push(`/admin/submissions/${problemId}`);\r\n    } catch (error) {\r\n        ElMessage.error('查重失败: ' + (error.response?.data?.message || error.message));\r\n    }\r\n};\r\nconst goToAnswers = (id) => {\r\n    router.push(`/admin/problem-answers/${id}`);\r\n};\r\n\r\nconst handleDropdownCommand = async (command, row) => {\r\n    switch (command) {\r\n        case 'manageSamples':\r\n            goToSamples(row.id); // 跳转到管理示例\r\n            break;\r\n        case 'viewSubmissions':\r\n            router.push(`/admin/submissions/${row.id}`); // 查看提交\r\n            break;\r\n        case 'manageAnswers':\r\n            goToAnswers(row.id); // 跳转到管理答案页面\r\n            break;\r\n        case 'checkDuplicates':\r\n            await checkDuplicates(row.id); // 调用查重接口\r\n            break;\r\n        default:\r\n            ElMessage.warning('未知操作');\r\n    }\r\n};\r\n\r\n\r\nonMounted(fetchProblems);\r\n</script>\r\n\r\n<style scoped>\r\n.truncate-text {\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n</style>","import script from \"./ProblemManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProblemManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProblemManagement.vue?vue&type=style&index=0&id=4cbb8137&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4cbb8137\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 搜索和操作 -->\r\n    <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n      <el-button v-if=\"problemId\" type=\"primary\" style=\"margin-bottom: 10px;\" @click=\"goBack\">返回</el-button>\r\n      <el-col :span=\"12\">\r\n        <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索示例...\"\r\n          style=\"width: 300px; margin-right: 10px;\"\r\n        />\r\n        <el-button type=\"primary\" @click=\"fetchSamples\">搜索</el-button>\r\n      </el-col>\r\n      <el-col :span=\"6\" style=\"text-align: right;\">\r\n        <el-button type=\"primary\" @click=\"openAddDialog\">添加示例</el-button>\r\n        <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelected\">批量删除</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 示例表格 -->\r\n    <el-table :data=\"samples\" :border=\"true\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column label=\"ID\" width=\"80\" prop=\"id\"></el-table-column>\r\n      <el-table-column label=\"题目ID\" width=\"100\" prop=\"problemId\"></el-table-column>\r\n      <el-table-column label=\"输入示例\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <el-tooltip effect=\"dark\" :content=\"scope.row.sampleInput\" placement=\"top\">\r\n            <span class=\"truncate-text\">{{ scope.row.sampleInput }}</span>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"输出示例\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <el-tooltip effect=\"dark\" :content=\"scope.row.sampleOutput\" placement=\"top\">\r\n            <span class=\"truncate-text\">{{ scope.row.sampleOutput }}</span>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"示例解释\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <el-tooltip effect=\"dark\" :content=\"scope.row.problemExplain || '无'\" placement=\"top\">\r\n            <span class=\"truncate-text\">{{ scope.row.problemExplain || '无' }}</span>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"updatedAt\" label=\"更新时间\"></el-table-column>\r\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editSample(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"confirmDeleteSample(scope.row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页和每页显示 -->\r\n    <el-row style=\"margin-top: 10px;\" justify=\"space-between\">\r\n      <el-col :span=\"2\">\r\n        <el-select v-model=\"page.size\" @change=\"handlePageSizeChange\">\r\n          <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n          <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n          <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n          <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <el-pagination\r\n          :current-page=\"page.current\"\r\n          :page-size=\"page.size\"\r\n          :total=\"page.total\"\r\n          layout=\"prev, pager, next\"\r\n          @current-change=\"handlePageChange\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 添加/编辑弹窗 -->\r\n    <el-dialog v-model=\"dialogVisible\" :title=\"isEdit ? '编辑示例' : '添加示例'\" :draggable=\"true\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"题目ID\" :required=\"true\">\r\n          <el-input-number v-model=\"form.problemId\" :min=\"1\" style=\"width: 100%;\" :disabled=\"!!problemId\"></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入示例\" :required=\"true\">\r\n          <el-input v-model=\"form.sampleInput\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"输出示例\" :required=\"true\">\r\n          <el-input v-model=\"form.sampleOutput\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"示例解释\">\r\n          <el-input v-model=\"form.problemExplain\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span  class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"saveSample\">保存</el-button>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, watch } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from '@/api';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\n// 路由和路由参数\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst problemId = ref(route.params.id ? Number(route.params.id) : null);\r\n\r\n// 搜索查询\r\nconst searchQuery = ref('');\r\n\r\n// 数据列表和选中项\r\nconst samples = ref([]);\r\nconst selectedRows = ref([]);\r\n\r\n// 弹窗控制\r\nconst dialogVisible = ref(false);\r\nconst isEdit = ref(false);\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  id: null,\r\n  problemId: null, // 作为数字\r\n  sampleInput: '',\r\n  sampleOutput: '',\r\n  problemExplain: ''\r\n});\r\n\r\n// 分页信息\r\nconst page = reactive({\r\n  current: 1,\r\n  size: 5,\r\n  total: 0\r\n});\r\n\r\n// 获取示例数据\r\nconst fetchSamples = async () => {\r\n  try {\r\n    let url;\r\n    let params = { query: searchQuery.value, current: page.current, size: page.size };\r\n\r\n    if (problemId.value) {\r\n      url = `/problem-samples/getByProblemId/${problemId.value}`;\r\n    } else {\r\n      url = `/problem-samples/page`;\r\n    }\r\n\r\n    const res = await axios.get(url, { params });\r\n    if (res.data.code !== 200) {\r\n      throw new Error(res.data.message || '获取示例失败');\r\n    }\r\n\r\n    if (problemId.value) {\r\n      // 假设 res.data.data 是数组\r\n      samples.value = res.data.data.map(sample => ({\r\n        ...sample,\r\n        problemId: Number(sample.problemId)\r\n      }));\r\n      page.total = res.data.data.length;\r\n    } else {\r\n      samples.value = res.data.data.records.map(sample => ({\r\n        ...sample,\r\n        problemId: Number(sample.problemId)\r\n      }));\r\n      page.total = res.data.data.total;\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.message);\r\n  }\r\n};\r\n\r\n// 分页更改\r\nconst handlePageChange = (pageNum) => {\r\n  page.current = pageNum;\r\n  fetchSamples();\r\n};\r\n\r\n// 每页显示数量更改\r\nconst handlePageSizeChange = (size) => {\r\n  page.size = size;\r\n  page.current = 1;\r\n  fetchSamples();\r\n};\r\n\r\n// 打开添加示例弹窗\r\nconst openAddDialog = () => {\r\n  isEdit.value = false;\r\n  Object.assign(form, {\r\n    id: null,\r\n    problemId: problemId.value || null,\r\n    sampleInput: '',\r\n    sampleOutput: '',\r\n    problemExplain: ''\r\n  });\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 编辑示例\r\nconst editSample = (sample) => {\r\n  isEdit.value = true;\r\n  Object.assign(form, {\r\n    ...sample,\r\n    problemId: sample.problemId !== null && sample.problemId !== undefined ? Number(sample.problemId) : null\r\n  });\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 保存示例（添加或编辑）\r\nconst saveSample = async () => {\r\n  // 验证问题ID是否为空且为有效数字\r\n  if (form.problemId === null || isNaN(form.problemId) || form.problemId <= 0) {\r\n    ElMessage.error('题目ID必须是一个有效的正整数');\r\n    return;\r\n  }\r\n\r\n  // 验证其他必填字段\r\n  if (!form.sampleInput.trim()) {\r\n    ElMessage.error('输入示例不能为空');\r\n    return;\r\n  }\r\n  if (!form.sampleOutput.trim()) {\r\n    ElMessage.error('输出示例不能为空');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let response;\r\n    if (isEdit.value) {\r\n      response = await axios.put(`/problem-samples/updateById`, form);\r\n    } else {\r\n      // 如果通过路由传递了 problemId，就使用它，否则使用用户输入的 form.problemId\r\n      const payload = problemId.value ? { ...form, problemId: problemId.value } : { ...form };\r\n      response = await axios.post(`/problem-samples/create`, payload);\r\n    }\r\n\r\n    if (response.data.code !== 200) {\r\n      throw new Error(response.data.message || '保存失败');\r\n    }\r\n\r\n    ElMessage.success(isEdit.value ? '示例更新成功' : '示例添加成功');\r\n    dialogVisible.value = false;\r\n    fetchSamples();\r\n  } catch (error) {\r\n    ElMessage.error(error.message);\r\n  }\r\n};\r\n\r\n// 删除单个示例的确认提示\r\nconst confirmDeleteSample = (id) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除此示例吗？此操作无法撤销。',\r\n    '删除确认',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(() => {\r\n      deleteSample(id);\r\n    })\r\n    .catch(() => {\r\n      // 用户取消删除\r\n    });\r\n};\r\n\r\n// 删除单个示例\r\nconst deleteSample = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`/problem-samples/deleteById/${id}`);\r\n    if (response.data.code !== 200) {\r\n      throw new Error(response.data.message || '删除失败');\r\n    }\r\n    ElMessage.success('删除成功');\r\n    fetchSamples();\r\n  } catch (error) {\r\n    ElMessage.error(error.message);\r\n  }\r\n};\r\n\r\n// 处理表格选择变化\r\nconst handleSelectionChange = (rows) => {\r\n  selectedRows.value = rows;\r\n};\r\n\r\n// 批量删除的确认提示\r\nconst deleteSelected = async () => {\r\n  ElMessageBox.confirm(\r\n    '确定要批量删除选中的示例吗？此操作无法撤销。',\r\n    '批量删除确认',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(async () => {\r\n      const ids = selectedRows.value.map(row => row.id);\r\n      try {\r\n        const response = await axios.post('/problem-samples/deleteBatch', ids);\r\n        if (response.data.code !== 200) {\r\n          throw new Error(response.data.message || '批量删除失败');\r\n        }\r\n        ElMessage.success('批量删除成功');\r\n        selectedRows.value = [];\r\n        fetchSamples();\r\n      } catch (error) {\r\n        ElMessage.error(error.message);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // 用户取消批量删除\r\n    });\r\n};\r\n\r\n// 监听路由参数变化\r\nwatch(() => route.params.id, (newId) => {\r\n  problemId.value = newId ? Number(newId) : null;\r\n  fetchSamples();\r\n});\r\n\r\n// 返回上一页\r\nconst goBack = () => {\r\n  router.back();\r\n};\r\n\r\n// 初始化数据\r\nonMounted(fetchSamples);\r\n</script>\r\n\r\n<style scoped>\r\n.truncate-text {\r\n  max-width: 150px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n</style>\r\n","import script from \"./SampleManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SampleManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SampleManagement.vue?vue&type=style&index=0&id=13e46798&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-13e46798\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"login-container\">\r\n      <el-form :model=\"loginForm\" label-width=\"80px\" class=\"login-form\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { reactive } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import { ElMessage } from 'element-plus';\r\n  import store from '@/store';\r\n  \r\n  const router = useRouter();\r\n  \r\n  const loginForm = reactive({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  \r\n  const handleLogin = async () => {\r\n    try {\r\n      await store.dispatch('login', loginForm);\r\n      ElMessage.success('登录成功');\r\n      router.push('/admin/dashboard');\r\n    } catch (error) {\r\n      ElMessage.error(error.message || '登录失败');\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    width: 400px;\r\n    margin: 100px auto;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n  }\r\n  </style>\r\n  ","import script from \"./TeacherLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TeacherLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TeacherLogin.vue?vue&type=style&index=0&id=0c4b4cfe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c4b4cfe\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <!-- 搜索和操作 -->\r\n      <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n        <el-button v-if=\"problemId\" type=\"primary\" style=\"margin-bottom: 10px;\" @click=\"goBack\">返回</el-button>\r\n        <el-col :span=\"10\">\r\n          <el-input\r\n            v-model=\"searchQuery\"\r\n            placeholder=\"搜索提交记录...\"\r\n            style=\"width: 300px; margin-right: 10px;\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"fetchSubmissions\">搜索</el-button>\r\n        </el-col>\r\n        <el-col :span=\"6\" style=\"text-align: right;\">\r\n          <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelected\">批量删除</el-button>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 提交记录表格 -->\r\n      <el-table :data=\"submissions\" border @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"ID\" prop=\"id\" width=\"80\"></el-table-column>\r\n        <el-table-column label=\"用户\" prop=\"userId\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"题目\" prop=\"problemId\" width=\"200\"></el-table-column>\r\n        <el-table-column label=\"状态\" prop=\"status\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusTag(scope.row.status)\">{{ scope.row.status }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"运行时间(ms)\" prop=\"runtime\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"内存(KB)\" prop=\"memory\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"提交时间\" prop=\"createdAt\" width=\"180\"></el-table-column>\r\n        <el-table-column label=\"代码查重\" prop=\"duplicationRate\" width=\"180\"></el-table-column>\r\n        <el-table-column label=\"评分\" prop=\"score\"></el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"300\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" type=\"success\" @click=\"openScoreDialog(scope.row)\">评分</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteSubmission(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n  \r\n      <!-- 分页和每页显示 -->\r\n      <el-row style=\"margin-top: 10px;\" align=\"middle\" justify=\"space-between\">\r\n        <el-col :span=\"2\">\r\n          <el-select v-model=\"page.size\" @change=\"handlePageSizeChange\">\r\n            <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n            <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n            <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n            <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"16\">\r\n          <el-pagination\r\n            :current-page=\"page.current\"\r\n            :page-size=\"page.size\"\r\n            :total=\"page.total\"\r\n            layout=\"prev, pager, next\"\r\n            @current-change=\"handlePageChange\"\r\n          />\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 评分弹窗 -->\r\n      <el-dialog v-model=\"dialogVisible\" title=\"评分\">\r\n        <el-form :model=\"currentSubmission\">\r\n          <el-form-item label=\"代码\">\r\n            <el-input v-model=\"currentSubmission.code\" type=\"textarea\" :rows=\"10\" disabled></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"评分\">\r\n            <el-input-number v-model=\"score\" :min=\"0\" :max=\"100\" />\r\n          </el-form-item>\r\n        </el-form>\r\n        <el-button type=\"primary\" @click=\"saveScore\">确认</el-button>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, onMounted } from 'vue';\r\n  import { ElMessage } from 'element-plus';\r\n  import axios from '@/api';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  \r\n  const route = useRoute();\r\n  const router = useRouter();\r\n  const problemId = ref(route.params.id || null);\r\n  const searchQuery = ref('');\r\n  const submissions = ref([]);\r\n  const selectedRows = ref([]);\r\n  const page = reactive({ current: 1, size: 10, total: 0 });\r\n  const dialogVisible = ref(false);\r\n  const score = ref(0);\r\n  const currentSubmission = reactive({ id: null, code: '', score: 0 });\r\n  \r\n  const fetchSubmissions = async () => {\r\n    try {\r\n      const url = problemId.value ? `/submissions/page/problem/${problemId.value}` : '/submissions/page';\r\n      const res = await axios.get(url, {\r\n        params: { query: searchQuery.value, current: page.current, size: page.size }\r\n      });\r\n      submissions.value = res.data.data.records;\r\n      page.total = res.data.data.total;\r\n    } catch (error) {\r\n      ElMessage.error('获取提交记录失败');\r\n    }\r\n  };\r\n  \r\n  const handlePageChange = (pageNum) => {\r\n    page.current = pageNum;\r\n    fetchSubmissions();\r\n  };\r\n  \r\n  const handlePageSizeChange = (size) => {\r\n    page.size = size;\r\n    page.current = 1;\r\n    fetchSubmissions();\r\n  };\r\n  \r\n  const handleSelectionChange = (rows) => {\r\n    selectedRows.value = rows;\r\n  };\r\n  \r\n  const deleteSubmission = async (id) => {\r\n    try {\r\n      await axios.delete(`/submissions/deleteById/${id}`);\r\n      ElMessage.success('删除成功');\r\n      fetchSubmissions();\r\n    } catch (error) {\r\n      ElMessage.error('删除失败');\r\n    }\r\n  };\r\n  \r\n  const deleteSelected = async () => {\r\n    const ids = selectedRows.value.map(row => row.id);\r\n    try {\r\n      await axios.post('/submissions/deleteBatch', ids);\r\n      ElMessage.success('批量删除成功');\r\n      fetchSubmissions();\r\n    } catch (error) {\r\n      ElMessage.error('批量删除失败');\r\n    }\r\n  };\r\n  \r\n  const openScoreDialog = async (submission) => {\r\n    try {\r\n      const res = await axios.get(`/submissions/detail/${submission.id}`);\r\n      Object.assign(currentSubmission, res.data.data);\r\n      score.value = currentSubmission.score || 0;\r\n      dialogVisible.value = true;\r\n    } catch (error) {\r\n      ElMessage.error('获取提交详情失败');\r\n    }\r\n  };\r\n  \r\n  const saveScore = async () => {\r\n  try {\r\n    const response = await axios.post(`/submissions/score/${currentSubmission.id}`, null, {\r\n      params: { score: score.value }\r\n    });\r\n\r\n    // 如果请求成功且状态码为200（或其他成功的状态码）\r\n    if (response.data.code >= 200 && response.data.status < 300) {\r\n      ElMessage.success('评分成功');\r\n      dialogVisible.value = false;\r\n      fetchSubmissions();\r\n    } else {\r\n      // 对于非2xx的状态码，可以在这里添加额外的处理逻辑\r\n      ElMessage.error(` ${response.data.message}`);\r\n    }\r\n  } catch (error) {\r\n    // 捕获网络错误或非2xx的HTTP状态码\r\n    if (error.response) {\r\n      // 请求已发出并收到了一个非2xx的响应\r\n      const { status, data } = error.response;\r\n\r\n      // 特定处理400 Bad Request及其携带的消息\r\n      if (status === 400) {\r\n        ElMessage.error(data.message || '评分失败，提交记录未通过验证');\r\n      } else {\r\n        // 处理其他HTTP错误状态码\r\n        ElMessage.error(`评分失败，服务器返回状态码: ${status}`);\r\n      }\r\n    } else if (error.request) {\r\n      // 请求已经发出但没有收到响应（例如：超时或网络问题）\r\n      ElMessage.error('无法连接到服务器，请稍后再试');\r\n    } else {\r\n      // 其他类型的错误\r\n      ElMessage.error('评分失败，请稍后再试');\r\n    }\r\n  }\r\n};\r\n  \r\n  const getStatusTag = (status) => {\r\n    switch (status) {\r\n      case 'Accepted': return 'success';\r\n      case 'Wrong Answer': return 'danger';\r\n      case 'Runtime Error': return 'warning';\r\n      default: return 'info';\r\n    }\r\n  };\r\n  const goBack = () => {\r\n    router.back();\r\n};\r\n  \r\n  onMounted(fetchSubmissions);\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .truncate-text {\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  </style>\r\n  ","import script from \"./SubmissionManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SubmissionManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SubmissionManagement.vue?vue&type=style&index=0&id=67e4a920&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-67e4a920\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <!-- 返回按钮\r\n        <el-button v-if=\"problemId\" type=\"primary\" @click=\"goBack\" style=\"margin-bottom: 10px;\">返回</el-button> -->\r\n        \r\n        <!-- 搜索和操作区域 -->\r\n        <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n            <el-col :span=\"12\">\r\n                <!-- 搜索框 -->\r\n                <el-input v-model=\"searchQuery\" placeholder=\"搜索用户...\" style=\"width: 300px; margin-right: 10px;\" />\r\n                <el-button type=\"primary\" @click=\"fetchUsers\">搜索</el-button>\r\n            </el-col>\r\n            <el-col :span=\"12\" style=\"text-align: right;\">\r\n                <!-- 操作按钮 -->\r\n                <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelectedUsers\">批量删除</el-button>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 用户表格 -->\r\n        <el-table :data=\"users\" border style=\"width: 100%;\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"用户ID\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"email\" label=\"邮箱\" width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"role\" label=\"角色\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"studentNumber\" label=\"学号\" width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"level\" label=\"等级\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"points\" label=\"AI点数\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"totalScore\" label=\"总分\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"successfulSubmissions\" label=\"成功提交数\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"totalSubmissions\" label=\"总提交数\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"updatedAt\" label=\"更新时间\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"lastLogin\" label=\"最后登录时间\" width=\"380\"></el-table-column>\r\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n                <template #default=\"scope\">\r\n                    <el-button size=\"small\" type=\"primary\" @click=\"addAiPoints(scope.row.id, scope.row.username)\">增加积分</el-button>\r\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row style=\"margin-top: 10px;\" type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n            <el-col :span=\"2\">\r\n                <el-select v-model=\"page.size\" placeholder=\"每页显示\" style=\"width: 100%;\" @change=\"handlePageSizeChange\">\r\n                    <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n                    <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n                    <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n                    <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n                </el-select>\r\n            </el-col>\r\n            <el-col :span=\"16\">\r\n                <el-pagination\r\n:current-page=\"page.current\" :page-size=\"page.size\" :total=\"page.total\"\r\n                    layout=\"prev, pager, next\" style=\"text-align: right;\" @current-change=\"handlePageChange\" />\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- AI点数弹出框 -->\r\n        <el-dialog v-model=\"dialogVisible\" title=\"增加AI点数\">\r\n            <el-form :model=\"aiPointsForm\">\r\n                <el-form-item label=\"用户ID\">\r\n                    <el-input v-model=\"aiPointsForm.id\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"aiPointsForm.username\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"增加点数\">\r\n                    <el-input v-model.number=\"aiPointsForm.points\" type=\"number\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"submitAiPoints\">确认</el-button>\r\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { ElMessage ,ElMessageBox} from 'element-plus';\r\nimport axios from '@/api';\r\n\r\nconst searchQuery = ref('');\r\nconst users = ref([]);\r\nconst selectedRows = ref([]);\r\nconst page = reactive({ current: 1, size: 10, total: 0 });\r\nconst dialogVisible = ref(false);\r\nconst aiPointsForm = reactive({ id: '', username: '', points: 0 });\r\n\r\nconst fetchUsers = async () => {\r\n    try {\r\n        const res = await axios.get('/users/page', { params: { query: searchQuery.value, current: page.current, size: page.size } });\r\n        users.value = res.data.data.records;\r\n        page.total = res.data.data.total;\r\n    } catch (error) {\r\n        ElMessage.error('获取用户列表失败');\r\n    }\r\n};\r\n\r\nconst handlePageChange = (pageNum) => {\r\n    page.current = pageNum;\r\n    fetchUsers();\r\n};\r\n\r\nconst handlePageSizeChange = (size) => {\r\n    page.size = size;\r\n    page.current = 1;\r\n    fetchUsers();\r\n};\r\n\r\nconst handleSelectionChange = (rows) => {\r\n    selectedRows.value = rows;\r\n};\r\n\r\nconst deleteUser = async (id) => {\r\n    try {\r\n        await axios.delete(`/users/deleteUserById/${id}`);\r\n        ElMessage.success('删除用户成功');\r\n        fetchUsers();\r\n    } catch (error) {\r\n        ElMessage.error('删除用户失败');\r\n    }\r\n};\r\n\r\nconst deleteSelectedUsers = async () => {\r\n    const ids = selectedRows.value.map(row => row.id);\r\n    try {\r\n        await axios.post('/users/deleteBatch', ids);\r\n        ElMessage.success('批量删除成功');\r\n        fetchUsers();\r\n    } catch (error) {\r\n        ElMessage.error('批量删除失败');\r\n    }\r\n};\r\n\r\n// const openAddAiPointsDialog = (user) => {\r\n//     aiPointsForm.id = user.id;\r\n//     aiPointsForm.username = user.username;\r\n//     aiPointsForm.points = 0;\r\n//     dialogVisible.value = true;\r\n// };\r\n\r\nconst addAiPoints = async (id, username) => {\r\n  // 使用 Element Plus 的弹出框\r\n  ElMessageBox.prompt(`请输入要给用户 ${username} 增加的积分:`, '增加积分', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    inputPattern: /^[1-9]\\d*$/, // 正则表达式限制：必须为正整数\r\n    inputErrorMessage: '积分必须是正整数',\r\n  })\r\n    .then(async ({ value }) => {\r\n      try {\r\n        // 调用后端接口\r\n        await axios.put(`/users/addByPoints`, null, {\r\n          params: { id: id, i: parseInt(value) },\r\n        });\r\n        // 操作成功提示\r\n        ElMessage.success('积分增加成功');\r\n        fetchUsers(); // 刷新用户列表\r\n      } catch (error) {\r\n        ElMessage.error('增加积分失败');\r\n      }\r\n    })\r\n    .catch(() => {\r\n      ElMessage.info('操作取消'); // 取消操作提示\r\n    });\r\n};\r\n\r\n\r\nonMounted(fetchUsers);\r\n</script>\r\n\r\n<style scoped>\r\n.truncate-text {\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n</style>\r\n","import script from \"./UserManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserManagement.vue?vue&type=style&index=0&id=0b1e736e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b1e736e\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <!-- 搜索和操作 -->\r\n      <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n        <el-col :span=\"12\">\r\n          <el-input\r\n            v-model=\"searchQuery\"\r\n            placeholder=\"搜索评论...\"\r\n            style=\"width: 300px; margin-right: 10px;\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"fetchComments\">搜索</el-button>\r\n        </el-col>\r\n        <el-col :span=\"12\" style=\"text-align: right;\">\r\n          <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelected\">\r\n            批量删除\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 评论表格 -->\r\n      <el-table :data=\"comments\" border @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"problemTitle\" label=\"题目标题\" width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"comment\" label=\"评论内容\" width=\"300\">\r\n          <template #default=\"scope\">\r\n            <el-tooltip effect=\"dark\" :content=\"scope.row.comment\" placement=\"top\">\r\n              <span class=\"truncate-text\">{{ scope.row.comment }}</span>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createdAt\" label=\"发布时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"updatedAt\" label=\"更新时间\" ></el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteComment(scope.row.id)\">\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n  \r\n      <!-- 分页和每页显示 -->\r\n      <el-row style=\"margin-top: 10px;\" justify=\"space-between\">\r\n        <el-col :span=\"2\">\r\n          <el-select v-model=\"page.size\" @change=\"handlePageSizeChange\">\r\n            <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n            <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n            <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n            <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"16\">\r\n          <el-pagination\r\n            :current-page=\"page.current\"\r\n            :page-size=\"page.size\"\r\n            :total=\"page.total\"\r\n            layout=\"prev, pager, next\"\r\n            @current-change=\"handlePageChange\"\r\n          />\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, onMounted } from 'vue';\r\n  import { ElMessage } from 'element-plus';\r\n  import axios from '@/api';\r\n  \r\n  const searchQuery = ref(''); // 搜索关键字\r\n  const comments = ref([]); // 评论数据\r\n  const selectedRows = ref([]); // 选中行\r\n  const page = reactive({ current: 1, size: 10, total: 0 }); // 分页\r\n  \r\n  // 获取评论列表\r\n  const fetchComments = async () => {\r\n    try {\r\n      const res = await axios.get('/comments/page', {\r\n        params: { query: searchQuery.value, current: page.current, size: page.size },\r\n      });\r\n      comments.value = res.data.data.records;\r\n      page.total = res.data.data.total;\r\n    } catch (error) {\r\n      ElMessage.error('获取评论列表失败');\r\n    }\r\n  };\r\n  \r\n  // 翻页处理\r\n  const handlePageChange = (pageNum) => {\r\n    page.current = pageNum;\r\n    fetchComments();\r\n  };\r\n  \r\n  // 每页条数变化\r\n  const handlePageSizeChange = (size) => {\r\n    page.size = size;\r\n    page.current = 1;\r\n    fetchComments();\r\n  };\r\n  \r\n  // 行选中变化\r\n  const handleSelectionChange = (rows) => {\r\n    selectedRows.value = rows;\r\n  };\r\n  \r\n  // 删除评论\r\n  const deleteComment = async (id) => {\r\n    try {\r\n      await axios.delete(`/comments/delete/${id}`);\r\n      ElMessage.success('删除评论成功');\r\n      fetchComments();\r\n    } catch (error) {\r\n      ElMessage.error('删除评论失败');\r\n    }\r\n  };\r\n  \r\n  // 批量删除评论\r\n  const deleteSelected = async () => {\r\n    const ids = selectedRows.value.map((row) => row.id);\r\n    console.log('批量删除的评论ID：', ids);\r\n    \r\n    try {\r\n      await axios.post('/comments/deleteBatch', ids);\r\n      ElMessage.success('批量删除成功');\r\n      fetchComments();\r\n    } catch (error) {\r\n      ElMessage.error('批量删除失败');\r\n    }\r\n  };\r\n  \r\n  // 初始化加载评论数据\r\n  onMounted(fetchComments);\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .truncate-text {\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  </style>\r\n","import script from \"./CommentManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommentManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommentManagement.vue?vue&type=style&index=0&id=96b40cc2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-96b40cc2\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <!-- 选项卡 -->\r\n      <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"通过数最多\" name=\"topPass\"></el-tab-pane>\r\n        <el-tab-pane label=\"正确率最高\" name=\"topAccuracy\"></el-tab-pane>\r\n        <el-tab-pane label=\"总得分最高\" name=\"topScore\"></el-tab-pane>\r\n      </el-tabs>\r\n  \r\n      <!-- 排行榜表格 -->\r\n      <el-table :data=\"leaderboard\" border style=\"width: 100%\">\r\n        <el-table-column type=\"index\" label=\"排名\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"role\" label=\"角色\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"successfulSubmissions\" label=\"通过数\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"totalSubmissions\" label=\"总提交数\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"accuracy\" label=\"正确率\" >\r\n          <template #default=\"scope\">\r\n            {{ ((scope.row.successfulSubmissions / scope.row.totalSubmissions) * 100).toFixed(2) }}%\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"totalScore\" label=\"总得分\" width=\"120\"></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from '@/api';\r\n  import { ElMessage } from 'element-plus';\r\n  \r\n  const activeTab = ref('topPass');\r\n  const leaderboard = ref([]);\r\n  \r\n  // 获取排行榜数据\r\n  const fetchLeaderboard = async (type) => {\r\n    let url = '';\r\n    switch (type) {\r\n      case 'topPass':\r\n        url = '/leaderboard/top-pass';\r\n        break;\r\n      case 'topAccuracy':\r\n        url = '/leaderboard/top-accuracy';\r\n        break;\r\n      case 'topScore':\r\n        url = '/leaderboard/top-score';\r\n        break;\r\n    }\r\n    try {\r\n      const res = await axios.get(url, { params: { limit: 10 } });\r\n      leaderboard.value = res.data.data;\r\n    } catch (error) {\r\n      ElMessage.error('获取排行榜失败');\r\n    }\r\n  };\r\n  \r\n  // 处理选项卡点击事件\r\n  const handleTabClick = (tab) => {\r\n    fetchLeaderboard(tab.props.name);\r\n  };\r\n  \r\n  // 初始加载\r\n  onMounted(() => {\r\n    fetchLeaderboard(activeTab.value);\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  ","import script from \"./LeaderboardView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LeaderboardView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"problem-container\">\r\n    <!-- 切换 Tab -->\r\n    <el-tabs v-model=\"activeTab\" type=\"card\" class=\"no-border-tabs\">\r\n      <el-tab-pane label=\"题目描述\" name=\"description\">\r\n        <div v-if=\"problemData\">\r\n          <h1>{{ problemData.title }}</h1>\r\n          <div class=\"meta-info\">\r\n            <span class=\"difficulty\" :class=\"problemData.difficulty\">{{ problemData.difficulty }}</span>\r\n            <span v-for=\"tag in (problemData.tags ?? '').split(',')\" :key=\"tag\" class=\"tag\">\r\n              {{ tag.trim() || '无标签' }}\r\n            </span>\r\n          </div>\r\n          <p class=\"description\">{{ problemData.description }}</p>\r\n          <h3>输入描述</h3>\r\n          <p>{{ problemData.inputDescription }}</p>\r\n          <h3>输出描述</h3>\r\n          <p>{{ problemData.outputDescription }}</p>\r\n        </div>\r\n        <div v-else class=\"loading\">\r\n          <el-icon>\r\n            <Loading />\r\n          </el-icon> 正在加载题目数据...\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"题解\" name=\"solution\" >\r\n        <!-- <el-tab-pane label=\"题解\" name=\"solution\" :disabled=\"!solutionData && !solutionError\"> -->\r\n        <div v-if=\"solutionData\">\r\n          <h3>题解思路</h3>\r\n          <p>{{ solutionData.solutionDescription }}</p>\r\n          <h3>参考代码</h3>\r\n          <pre class=\"code-block\">{{ solutionData.code }}</pre>\r\n        </div>\r\n        <div v-else-if=\"solutionError\">\r\n          <p class=\"error\">{{ solutionError }}</p>\r\n        </div>\r\n        <div v-else class=\"loading\">\r\n          <el-icon>\r\n            <Loading />\r\n          </el-icon> 正在加载题解...\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"提交记录\" name=\"submissions\">\r\n        <div v-if=\"submissionData\">\r\n          <h3>提交记录</h3>\r\n          <p>状态: {{ submissionData.status }}</p>\r\n          <p>提交时间: {{ submissionData.createdAt }}</p>\r\n          <p>运行时间: {{ submissionData.runtime }} ms</p>\r\n          <p>内存使用: {{ submissionData.memory }} KB</p>\r\n          <div v-if=\"submissionData.status === 'Accepted'\">\r\n            <h3>耗时排名</h3>\r\n            <p v-if=\"rankData\">排名: 第 {{ rankData.rank }} 名</p>\r\n            <p v-else>暂无排名信息</p>\r\n            <p v-if=\"rankData\">超越用户: {{ rankData.percentage.toFixed(2) }}%</p>\r\n            <p v-else>暂无超越百分比信息</p>\r\n            <p v-if=\"rankData\">与当前排名相同的用户数量: {{ rankData.equalRankCount }}</p>\r\n          </div>\r\n        </div>\r\n        <div v-else-if=\"submissionError\">\r\n          <p class=\"error\">{{ submissionError }}</p>\r\n        </div>\r\n        <div v-else class=\"loading\">\r\n          <el-icon>\r\n            <Loading />\r\n          </el-icon> 正在加载提交记录...\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"评论\" name=\"comments\">\r\n        <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\r\n          <div class=\"comment-header\">\r\n            <span class=\"username\">{{ comment.username }}</span>\r\n            <span class=\"time\">{{ comment.createdAt }}</span>\r\n            <div v-if=\"comment.userId === currentUserId\" style=\"width: 10px; height: 10px; justify-self: end;\" @click=\"deleteComment(comment.id)\">\r\n              <Delete />\r\n            </div>\r\n            \r\n          </div>\r\n          <div class=\"comment-body\">{{ comment.comment }}</div>\r\n        </div>\r\n\r\n        <el-form ref=\"commentForm\" :model=\"newComment\"  class=\"comment-form\">\r\n          <el-form-item>\r\n            <el-input\r\n            v-model=\"newComment.content\"\r\n              type=\"textarea\"\r\n              \r\n              placeholder=\"请输入评论内容\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitComment\">发布评论</el-button>\r\n        </el-form>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"@/api\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { Loading, Delete } from \"@element-plus/icons-vue\";\r\nimport { useRoute } from \"vue-router\";\r\n\r\nconst route = useRoute();\r\n\r\n// 当前激活的 Tab\r\nconst activeTab = ref(\"description\");\r\n\r\n// 题目信息\r\nconst problemData = ref(null);\r\n\r\nconst solutionData = ref(null)\r\nconst solutionError = ref(null)\r\n\r\n// 提交记录\r\nconst submissionData = ref(null);\r\nconst submissionError = ref(null);\r\n\r\n// 耗时排名信息\r\nconst rankData = ref(null);\r\n\r\n// 当前用户 ID\r\nconst currentUserId = ref(null);\r\n\r\n// 评论数据\r\nconst comments = ref([]);\r\n\r\n// 新评论内容\r\nconst newComment = ref({\r\n  content: \"\",\r\n});\r\n\r\n// 获取题目信息\r\nconst fetchProblemData = async (problemId) => {\r\n  try {\r\n    const response = await axios.get(`/problems/getById/${problemId}`);\r\n    if (response.data.code === 200) {\r\n      problemData.value = response.data.data;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"加载题目信息失败:\", error.message);\r\n  }\r\n};\r\n\r\n// 获取题解信息\r\nconst fetchSolutionData = async (problemId) => {\r\n  try {\r\n    const response = await axios.get(`/problem-answers/getSubmit?problemId=${problemId}`)\r\n    if (response.data.code === 200) {\r\n      solutionData.value = response.data.data\r\n    } else {\r\n      solutionError.value = response.data.message || '暂无题解'\r\n    }\r\n  } catch (error) {\r\n    solutionError.value = '加载题解失败'\r\n    console.error('加载题解失败:', error.message)\r\n  }\r\n}\r\n\r\nconst fetchSubmissionData = async (problemId) => {\r\n  try {\r\n    const response = await axios.get(`/submissions/getSubmissionByUserAndProblem?problemId=${problemId}`);\r\n    if (response.data.code === 200) {\r\n      submissionData.value = response.data.data;\r\n      // 如果状态为 Accepted，则获取排名\r\n      if (response.data.data.status === \"Accepted\") {\r\n        fetchRankData(problemId);\r\n      }\r\n    } else {\r\n      submissionError.value = response.data.message || \"暂无提交记录\";\r\n    }\r\n  } catch (error) {\r\n    submissionError.value = \"加载提交记录失败\";\r\n    console.error(\"加载提交记录失败:\", error.message);\r\n  }\r\n};\r\n\r\n// 获取耗时排名\r\nconst fetchRankData = async (problemId) => {\r\n  try {\r\n    const response = await axios.get(`/submissions/rank/${problemId}`);\r\n    if (response.data.code === 200) {\r\n      rankData.value = response.data.data || {};\r\n    } else {\r\n      console.error(\"获取耗时排名失败:\", response.data.message);\r\n      rankData.value = { rank: -1, total: 0, percentage: 0, equalRankCount: 0 };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取耗时排名失败:\", error.message);\r\n    rankData.value = { rank: -1, total: 0, percentage: 0, equalRankCount: 0 };\r\n  }\r\n};\r\n\r\n// 获取评论\r\nconst fetchComments = async (problemId) => {\r\n  try {\r\n    const response = await axios.get(`/comments/problem/${problemId}`);\r\n    if (response.data.code === 200) {\r\n      comments.value = response.data.data;\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"加载评论失败\");\r\n  }\r\n};\r\n\r\n// 发布评论\r\nconst submitComment = async () => {\r\n  if (!newComment.value.content.trim()) {\r\n    ElMessage.warning(\"评论内容不能为空\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\"/comments\", {\r\n      problemId: route.params.id,\r\n      comment: newComment.value.content,\r\n    });\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(\"评论发布成功\");\r\n      fetchComments(route.params.id); // 重新加载评论\r\n      newComment.value.content = \"\"; // 清空输入框\r\n    } else {\r\n      ElMessage.error(response.data.message || \"评论发布失败\");\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"评论发布失败：\" + error.message);\r\n  }\r\n};\r\n\r\n// 删除评论\r\nconst deleteComment = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`/comments/delete/${id}`);\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(\"评论删除成功\");\r\n      fetchComments(route.params.id); // 重新加载评论\r\n    } else {\r\n      ElMessage.error(response.data.message || \"评论删除失败\");\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"评论删除失败：\" + error.message);\r\n  }\r\n};\r\n\r\n// 获取当前登录用户 ID\r\nconst fetchCurrentUserId = async () => {\r\n  try {\r\n    const response = await axios.get(\"/users/getUserByLogin\");\r\n    if (response.data.code === 200) {\r\n      currentUserId.value = response.data.data.user.id;\r\n      console.log(currentUserId.value);\r\n      \r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取当前用户失败\", error.message);\r\n  }\r\n};\r\n\r\n// 路由参数中的题目 ID\r\nconst problemId = route.params.id;\r\n\r\n// 初始化加载\r\nonMounted(() => {\r\n  fetchProblemData(problemId);\r\n  fetchComments(problemId);\r\n  fetchSolutionData(problemId)\r\n  fetchSubmissionData(problemId);\r\n  fetchCurrentUserId();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.problem-container {\r\n  padding: 20px;\r\n}\r\n\r\n.meta-info {\r\n  margin-top: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n}\r\n\r\n.difficulty {\r\n  padding: 5px 10px;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.difficulty.简单 {\r\n  background-color: #e9e4e4;\r\n  color: #00e1ff;\r\n}\r\n\r\n.difficulty.中等 {\r\n  background-color: #ffeeba;\r\n  color: #ffc107;\r\n}\r\n\r\n.difficulty.困难 {\r\n  background-color: #f8d7da;\r\n  color: #dc3545;\r\n}\r\n\r\n.tag {\r\n  padding: 5px 10px;\r\n  background-color: #f1f1f1;\r\n  border-radius: 12px;\r\n  font-size: 14px;\r\n}\r\n\r\n.comment {\r\n  border-bottom: 1px solid #ebeef5;\r\n  padding: 10px 0;\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.comment-body {\r\n  margin-top: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.comment-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.comment-form .el-input {\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./ProblemDisplay.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProblemDisplay.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProblemDisplay.vue?vue&type=style&index=0&id=4ba872dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ba872dc\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"test-case-container\">\r\n    <el-tabs v-model=\"activeMainTab\">\r\n      <!-- 测试用例 -->\r\n      <el-tab-pane label=\"测试用例\" name=\"cases\">\r\n        <div v-if=\"isLoading\" class=\"loading\">\r\n          <el-icon><Loading /></el-icon> 正在加载测试用例...\r\n        </div>\r\n        <div v-else-if=\"samples.length === 0\" class=\"no-data\">\r\n          暂无测试用例\r\n        </div>\r\n        <div v-else>\r\n          <el-tabs v-model=\"activeTab\">\r\n            <el-tab-pane\r\n              v-for=\"(sample, index) in samples\"\r\n              :key=\"index\"\r\n              :label=\"`Case ${index + 1}`\"\r\n              :name=\"`case-${index + 1}`\"\r\n            >\r\n              <div class=\"test-case-details\">\r\n                <div class=\"input-section\">\r\n                  <h4>输入:</h4>\r\n                  <pre>{{ sample.sampleInput || '无' }}</pre>\r\n                </div>\r\n                <div class=\"output-section\">\r\n                  <h4>期望输出:</h4>\r\n                  <pre>{{ sample.sampleOutput }}</pre>\r\n                </div>\r\n                <div v-if=\"sample.problemExplain\" class=\"explanation-section\">\r\n                  <h4>解释:</h4>\r\n                  <pre>{{ sample.problemExplain }}</pre>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <!-- 测试结果 -->\r\n      <el-tab-pane label=\"测试结果\" name=\"results\">\r\n        <div v-if=\"testResults.length === 0\" class=\"no-data\">\r\n          暂无测试结果\r\n        </div>\r\n        <div v-else>\r\n          <el-tabs v-model=\"activeResultTab\">\r\n            <el-tab-pane\r\n              v-for=\"(result, index) in testResults\"\r\n              :key=\"index\"\r\n              :label=\"`Result ${index + 1}`\"\r\n              :name=\"`result-${index + 1}`\"\r\n            >\r\n              <div class=\"test-case-result\">\r\n                <h3>执行结果</h3>\r\n                <div v-if=\"result.status === 'pass'\" class=\"result-pass\">\r\n                  <el-icon><Check /></el-icon> 通过 执行用时: {{ result.time * 1000 }} ms\r\n                  <p>消耗内存: {{ result.memory }} KB</p>\r\n                </div>\r\n                <div v-else-if=\"result.status === 'error'\" class=\"result-fail\">\r\n                  <el-icon><Close /></el-icon> 运行错误\r\n                  <div class=\"result-fail-content\">{{ result.message }}</div>\r\n                  <p v-if=\"result.detail\">错误详情: {{ result.detail }}</p>\r\n                </div>\r\n                <div v-else class=\"result-fail\">\r\n                  <el-icon><Close /></el-icon> 未通过\r\n                  <div class=\"result-fail-content\">{{ result.message }}</div>\r\n                </div>\r\n\r\n                <div class=\"output-details\">\r\n                  <h4>实际输出:</h4>\r\n                  <pre>{{ result.output }}</pre>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from '@/api'\r\nimport { Check, Close, Loading } from '@element-plus/icons-vue'\r\n\r\n// 接收父组件传递的 props\r\nconst props = defineProps({\r\n  problemId: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  testResults: {\r\n    type: Array,\r\n    default: () => []\r\n  }\r\n})\r\n\r\nconst samples = ref([]) // 测试用例\r\nconst activeTab = ref('case-1') // 默认选中的测试用例 Tab\r\nconst activeMainTab = ref('cases') // 主 Tab 的默认选项\r\nconst activeResultTab = ref('result-1') // 默认选中的测试结果 Tab\r\nconst isLoading = ref(false) // 加载状态\r\n\r\n// 获取测试样例\r\nconst fetchSamples = async () => {\r\n  isLoading.value = true\r\n  try {\r\n    const response = await axios.get(`/problem-samples/getByProblemId/${props.problemId}`)\r\n    if (response.data.code === 200) {\r\n      samples.value = response.data.data || []\r\n      console.log('加载测试用例成功:', samples.value)\r\n    } else {\r\n      console.error('加载测试用例失败:', response.data.message)\r\n    }\r\n  } catch (error) {\r\n    console.error('加载测试用例失败:', error.message)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(fetchSamples)\r\n</script>\r\n\r\n<style scoped>\r\n/* 容器样式 */\r\n.test-case-container {\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 详情样式 */\r\n.test-case-details {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background: #ffffff;\r\n  border: 1px solid #dddddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.pre {\r\n  padding: 10px;\r\n  background-color: #f1f1f1;\r\n  border-radius: 5px;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n/* 结果显示样式 */\r\n.result-pass {\r\n  color: green;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.result-fail {\r\n  color: red;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.result-fail-content {\r\n  margin-top: 5px;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.output-details {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background: #f9f9f9;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* 空数据提示 */\r\n.no-data {\r\n  text-align: center;\r\n  color: #888;\r\n  font-size: 14px;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 加载中样式 */\r\n.loading {\r\n  text-align: center;\r\n  color: #409eff;\r\n  font-size: 14px;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n","import script from \"./TestCaseDisplay.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TestCaseDisplay.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TestCaseDisplay.vue?vue&type=style&index=0&id=232d65be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-232d65be\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"problem-page\">\r\n        <!-- 顶部操作栏 -->\r\n        <div class=\"action-bar\">\r\n            <el-button type=\"info\" @click=\"goBack\">返回</el-button>\r\n            <el-button type=\"primary\" :disabled=\"!testCases.length\" @click=\"submitCode\">\r\n            提交代码\r\n        </el-button>\r\n        <el-button type=\"success\" :disabled=\"!testCases.length\" @click=\"runTests\">\r\n            运行测试\r\n        </el-button>\r\n        </div>\r\n\r\n        <div class=\"content-container\">\r\n            <!-- 左侧题目展示 -->\r\n            <div class=\"problem-section\">\r\n                <ProblemDisplay :problem-data=\"problemData\" />\r\n            </div>\r\n\r\n            <!-- 右侧代码编辑器和测试用例 -->\r\n            <div class=\"code-section\">\r\n                <!-- 代码编辑器组件 -->\r\n                <CodeEditor v-model=\"code\" />\r\n\r\n                <!-- 测试用例组件 -->\r\n                <TestCaseDisplay \r\n                    :problem-id=\"problemId\" \r\n                    :test-results=\"testResults\" \r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { useRoute, useRouter } from 'vue-router'; // 引入 useRouter\r\nimport ProblemDisplay from '@/components/ProblemDisplay.vue';\r\nimport TestCaseDisplay from '@/components/TestCaseDisplay.vue';\r\nimport CodeEditor from '@/components/CodeEditor.vue';\r\nimport axios from '@/api';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst problemId = ref(route.params.id);\r\n\r\n// 定义题目数据和测试结果\r\nconst problemData = ref({\r\n    title: '',\r\n    description: '',\r\n    inputDescription: '',\r\n    outputDescription: '', \r\n});\r\nconst code = ref('');     // 编辑器内容\r\nconst testResults = ref([]);  // 测试结果\r\nconst testCases = ref([]);    // 测试用例\r\n\r\n// 获取题目数据\r\nconst fetchProblem = async () => {\r\n    try {\r\n        const response = await axios.get(`/problems/getById/${problemId.value}`);\r\n        if (response.data.code === 200) {\r\n            problemData.value = response.data.data;\r\n            testCases.value = response.data.data.samples || [];\r\n            console.log('测试用例:', testCases.value); // 调试输出测试用例\r\n        } else {\r\n            console.error('加载题目失败:', response.data.message);\r\n        }\r\n    } catch (error) {\r\n        console.error('加载题目失败:', error);\r\n    }\r\n};\r\n\r\nconst submitCode = async () => {\r\n    console.log(\"提交的代码:\", code.value); // 打印编辑器内容\r\n    console.log(\"题目 ID:\", problemId.value); // 打印题目 ID\r\n\r\n    try {\r\n        // 调用后端提交代码接口\r\n        const response = await axios.post(`/submissions/submit/${problemId.value}`, {\r\n            sourceCode: code.value, // 用户提交的代码\r\n            languageId: 52, // 编程语言ID (假设 52 代表 C++)\r\n        });\r\n\r\n        // 检查返回结果\r\n        if (response.data.code === 200) {\r\n            console.log(\"提交成功，评测结果:\", response.data.data);\r\n            testResults.value = [\r\n                {\r\n                    status: response.data.data.status,\r\n                    time: response.data.data.runtime,\r\n                    memory: response.data.data.memory,\r\n                },\r\n            ];\r\n            ElMessage.success(\"代码提交成功，评测通过！\");\r\n        } else {\r\n            console.error(\"评测失败:\", response.data.message);\r\n            testResults.value = [\r\n                {\r\n                    status: \"fail\",\r\n                    message: response.data.message,\r\n                },\r\n            ];\r\n            ElMessage.error(response.data.message || \"代码未通过评测\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"提交失败:\", error);\r\n        ElMessage.error(\"提交代码失败，请稍后再试\");\r\n    }\r\n};\r\n\r\n// 运行测试（调用真实接口）\r\n// 运行测试（调用真实接口）\r\nconst runTests = async () => {\r\n    // 每次运行测试前清空之前的结果，避免多次叠加\r\n    testResults.value = [];\r\n\r\n    // 如果没有测试用例，直接返回\r\n    if (!testCases.value.length) {\r\n        ElMessage.warning('该题目暂时没有测试用例');\r\n        return;\r\n    }\r\n\r\n    for (let i = 0; i < testCases.value.length; i++) {\r\n        const testCase = testCases.value[i];\r\n        console.log('当前测试用例:', testCase);\r\n        \r\n        // 准备要发送的参数\r\n        const payload = {\r\n            languageId: 52, // 后端固定好的语言 ID\r\n            sourceCode: code.value,\r\n        };\r\n\r\n        try {\r\n            // 调用真实接口\r\n            const response = await axios.post(`/submissions/test-case/submit/${testCase.id}`, payload);\r\n            const res = response.data;\r\n\r\n            // 根据不同的 code 处理不同的结果\r\n            if (res.code === 200) {\r\n                testResults.value.push({\r\n                    status: 'pass',\r\n                    time: res.data.time,\r\n                    memory: res.data.memory,\r\n                    output: res.data.stdout,\r\n                });\r\n            } else {\r\n                testResults.value.push({\r\n                    status: 'fail',\r\n                    message: res.message,\r\n                    detail: res.data,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            testResults.value.push({\r\n                status: 'error',\r\n                message: error.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// 返回上一个页面\r\nconst goBack = () => {\r\n    router.back();\r\n};\r\n\r\nonMounted(fetchProblem);\r\n</script>\r\n\r\n<style scoped>\r\n.problem-page {\r\n    padding: 20px;\r\n    background-color: #f7f7f7;\r\n    min-height: 100vh;\r\n}\r\n\r\n.action-bar {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin-bottom: 15px;\r\n    height: 50px;\r\n}\r\n\r\n.content-container {\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n\r\n.problem-section {\r\n    flex: 1;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.code-section {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin-top: 20px;\r\n}\r\n</style>\r\n","import script from \"./DescriptionView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DescriptionView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DescriptionView.vue?vue&type=style&index=0&id=c684fcda&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c684fcda\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <!-- 搜索和操作 -->\r\n      <el-row style=\"margin-bottom: 10px;\" align=\"middle\" justify=\"space-between\">\r\n        <el-button v-if=\"problemId\" type=\"primary\" style=\"margin-bottom: 10px;\" @click=\"goBack\">返回</el-button>\r\n        <el-col :span=\"10\">\r\n          <el-input\r\n            v-model=\"searchQuery\"\r\n            placeholder=\"搜索答案记录...\"\r\n            style=\"width: 300px; margin-right: 10px;\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"fetchAnswers\">搜索</el-button>\r\n        </el-col>\r\n        <el-col :span=\"6\" style=\"text-align: right;\">\r\n          <el-button type=\"primary\" @click=\"openAddDialog\">添加答案</el-button>\r\n          <el-button type=\"danger\" :disabled=\"selectedRows.length === 0\" @click=\"deleteSelected\">批量删除</el-button>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 答案记录表格 -->\r\n      <el-table :data=\"answers\"  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"ID\" prop=\"id\" width=\"80\"></el-table-column>\r\n        <el-table-column label=\"题目标题\" prop=\"problemTitle\" width=\"200\"></el-table-column>\r\n        <el-table-column label=\"创建者\" prop=\"username\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"解题思路\" prop=\"solutionDescription\" width=\"300\">\r\n          <template #default=\"scope\">\r\n            <el-tooltip effect=\"dark\" :content=\"scope.row.solutionDescription\" placement=\"top\">\r\n              <span class=\"truncate-text\">{{ scope.row.solutionDescription }}</span>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"代码\" prop=\"code\" width=\"300\">\r\n          <template #default=\"scope\">\r\n            <el-tooltip effect=\"dark\" :content=\"scope.row.code\" placement=\"top\">\r\n              <span class=\"truncate-text\">{{ scope.row.code }}</span>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建时间\" prop=\"createdAt\"></el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" type=\"primary\" @click=\"editAnswer(scope.row)\">编辑</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteAnswer(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n  \r\n      <!-- 分页和每页显示 -->\r\n      <el-row style=\"margin-top: 10px;\" align=\"middle\" justify=\"space-between\">\r\n        <el-col :span=\"2\">\r\n          <el-select v-model=\"page.size\" @change=\"handlePageSizeChange\">\r\n            <el-option label=\"5 条/页\" :value=\"5\"></el-option>\r\n            <el-option label=\"10 条/页\" :value=\"10\"></el-option>\r\n            <el-option label=\"20 条/页\" :value=\"20\"></el-option>\r\n            <el-option label=\"50 条/页\" :value=\"50\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"16\">\r\n          <el-pagination\r\n            :current-page=\"page.current\"\r\n            :page-size=\"page.size\"\r\n            :total=\"page.total\"\r\n            layout=\"prev, pager, next\"\r\n            @current-change=\"handlePageChange\"\r\n          />\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 添加/编辑弹窗 -->\r\n      <el-dialog v-model=\"dialogVisible\" title=\"添加/编辑答案\">\r\n        <el-form :model=\"currentAnswer\">\r\n            <el-form-item label=\"题目ID\">\r\n            <el-input v-model=\"currentAnswer.problemId\" :disabled=\"!!problemId\" type=\"textarea\" :rows=\"1\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"解题思路\">\r\n            <el-input v-model=\"currentAnswer.solutionDescription\" type=\"textarea\" :rows=\"5\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"代码\">\r\n            <el-input v-model=\"currentAnswer.code\" type=\"textarea\" :rows=\"10\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <el-button type=\"primary\" @click=\"saveAnswer\">确认</el-button>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, onMounted } from 'vue';\r\n  import { ElMessage } from 'element-plus';\r\n  import axios from '@/api';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  \r\n  const route = useRoute();\r\n  const router = useRouter();\r\n  const problemId = ref(route.params.id || null);\r\n  const searchQuery = ref('');\r\n  const answers = ref([]);\r\n  const selectedRows = ref([]);\r\n  const page = reactive({ current: 1, size: 10, total: 0 });\r\n  const dialogVisible = ref(false);\r\n  const currentAnswer = reactive({ id: null, problemId: problemId.value, solution: '', code: '' });\r\n  \r\n  const fetchAnswers = async () => {\r\n    try {\r\n      const url = problemId.value ? `/problem-answers/page/${problemId.value}` : '/problem-answers/page';\r\n      const res = await axios.get(url, {\r\n        params: { query: searchQuery.value, current: page.current, size: page.size },\r\n      });\r\n      answers.value = res.data.data.records;\r\n      page.total = res.data.data.total;\r\n    } catch (error) {\r\n      ElMessage.error('获取答案列表失败');\r\n    }\r\n  };\r\n  \r\n  const handlePageChange = (pageNum) => {\r\n    page.current = pageNum;\r\n    fetchAnswers();\r\n  };\r\n  \r\n  const handlePageSizeChange = (size) => {\r\n    page.size = size;\r\n    page.current = 1;\r\n    fetchAnswers();\r\n  };\r\n  \r\n  const handleSelectionChange = (rows) => {\r\n    selectedRows.value = rows;\r\n  };\r\n  \r\n  const openAddDialog = () => {\r\n    Object.assign(currentAnswer, { id: null, solution: '', code: '' });\r\n    dialogVisible.value = true;\r\n  };\r\n  \r\n  const editAnswer = (answer) => {\r\n    Object.assign(currentAnswer, answer);\r\n    dialogVisible.value = true;\r\n  };\r\n  \r\n  const saveAnswer = async () => {\r\n    try {\r\n      if (currentAnswer.id) {\r\n        await axios.put(`/problem-answers/update`, currentAnswer);\r\n        ElMessage.success('答案更新成功');\r\n      } else {\r\n        await axios.post(`/problem-answers/create`, currentAnswer);\r\n        ElMessage.success('答案添加成功');\r\n      }\r\n      dialogVisible.value = false;\r\n      fetchAnswers();\r\n    } catch (error) {\r\n      ElMessage.error('保存答案失败');\r\n    }\r\n  };\r\n  \r\n  const deleteAnswer = async (id) => {\r\n    try {\r\n      await axios.delete(`/problem-answers/delete/${id}`);\r\n      ElMessage.success('删除成功');\r\n      fetchAnswers();\r\n    } catch (error) {\r\n      ElMessage.error('删除失败');\r\n    }\r\n  };\r\n  \r\n  const deleteSelected = async () => {\r\n    const ids = selectedRows.value.map((row) => row.id);\r\n    try {\r\n      await axios.post('/problem-answers/deleteBatch', ids);\r\n      ElMessage.success('批量删除成功');\r\n      fetchAnswers();\r\n    } catch (error) {\r\n      ElMessage.error('批量删除失败');\r\n    }\r\n  };\r\n  \r\n  const goBack = () => {\r\n    router.back();\r\n  };\r\n  \r\n  onMounted(fetchAnswers);\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .truncate-text {\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  </style>\r\n  ","import script from \"./ProblemAnswers.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProblemAnswers.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProblemAnswers.vue?vue&type=style&index=0&id=13861844&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-13861844\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"ai-optimization\">\r\n    <h1>AI优化详情</h1>\r\n    <el-card>\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <el-icon><Loading /></el-icon>\r\n        <p>正在获取AI优化结果，请稍候...</p>\r\n      </div>\r\n      <div v-else>\r\n        <h3>优化详情:</h3>\r\n        <!-- 渲染Markdown内容 -->\r\n        <div class=\"markdown-content\" v-html=\"renderedMarkdown\"></div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport axios from '@/api'\r\nimport { Loading } from '@element-plus/icons-vue'\r\nimport MarkdownIt from 'markdown-it'\r\nimport hljs from 'highlight.js' // 引入highlight.js库\r\nimport 'highlight.js/styles/github.css' // 选择代码高亮主题样式\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// Markdown渲染器\r\nconst md = new MarkdownIt({\r\n  html: true, // 支持HTML\r\n  linkify: true, // 自动将链接转为可点击链接\r\n  typographer: true, // 自动替换一些符号\r\n  highlight: function (str, lang) {\r\n    if (lang && hljs.getLanguage(lang)) {\r\n      try {\r\n        return `<pre class=\"hljs\"><code>${hljs.highlight(lang, str, true).value}</code></pre>`\r\n      } catch (error) {\r\n      console.error(`Highlighting failed for language ${lang}:`, error);\r\n      return `<pre class=\"hljs\"><code>${md.utils.escapeHtml(str)}</code></pre>`;\r\n    }\r\n    }\r\n    return `<pre class=\"hljs\"><code>${md.utils.escapeHtml(str)}</code></pre>`\r\n  },\r\n})\r\n\r\n// 获取路由\r\nconst route = useRoute()\r\n\r\n// 状态管理\r\nconst loading = ref(true) // 加载状态\r\nconst renderedMarkdown = ref('') // 渲染后的Markdown内容\r\n\r\n// 获取AI优化数据\r\nconst fetchOptimizationData = async () => {\r\n  try {\r\n    const recordId = route.params.id // 获取URL中的记录ID\r\n    const response = await axios.get(`/ai/optimize-submission/${recordId}`) // 假设后端API路径\r\n    if (response.data.code === 200) {\r\n      const markdownContent = response.data.data.optimized_code // 获取优化内容（Markdown格式）\r\n      renderedMarkdown.value = md.render(markdownContent) // 使用Markdown渲染器解析\r\n      loading.value = false\r\n    } else {\r\n      loading.value = false\r\n      ElMessage.error(`获取优化结果失败: ${response.data.message}`)\r\n    }\r\n  } catch (error) {\r\n    loading.value = false\r\n    ElMessage.error(`获取优化结果失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 页面挂载时加载数据\r\nonMounted(fetchOptimizationData)\r\n</script>\r\n\r\n<style scoped>\r\n.ai-optimization {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  text-align: center;\r\n}\r\n\r\n.markdown-content {\r\n  background: #f8f9fa;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  overflow-x: auto;\r\n  line-height: 1.6;\r\n  text-align: left; /* 确保内容左对齐 */\r\n}\r\n\r\n.markdown-content h1,\r\n.markdown-content h2,\r\n.markdown-content h3 {\r\n  margin-top: 20px;\r\n  color: #333;\r\n}\r\n\r\n.markdown-content pre {\r\n  background: #2d2d2d;\r\n  color: #f8f9fa;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  overflow-x: auto;\r\n}\r\n\r\n.markdown-content code {\r\n  font-family: 'Courier New', Courier, monospace;\r\n  background: #f1f1f1;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n}\r\n\r\n.hljs {\r\n  background: #f8f9fa;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  overflow-x: auto;\r\n}\r\n\r\n</style>\r\n","import script from \"./AiOptimization.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AiOptimization.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AiOptimization.vue?vue&type=style&index=0&id=0131d4dd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0131d4dd\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <!-- 选项卡 -->\r\n      <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"通过数排行\" name=\"topPass\"></el-tab-pane>\r\n        <el-tab-pane label=\"正确率排行\" name=\"topAccuracy\"></el-tab-pane>\r\n        <el-tab-pane label=\"总得分排行\" name=\"topScore\"></el-tab-pane>\r\n      </el-tabs>\r\n  \r\n      <!-- 图表展示 -->\r\n      <div id=\"chart\" style=\"width: 100%; height: 400px; margin-top: 20px;\"></div>\r\n  \r\n      <!-- 排行榜表格 -->\r\n      <el-table :data=\"leaderboard\" border style=\"width: 100%; margin-top: 20px;\">\r\n        <el-table-column type=\"index\" label=\"排名\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"200\"></el-table-column>\r\n        <el-table-column\r\n          v-if=\"activeTab === 'topPass'\"\r\n          prop=\"value\"\r\n          label=\"通过数\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          v-if=\"activeTab === 'topAccuracy'\"\r\n          label=\"正确率\"\r\n        >\r\n          <template #default=\"scope\">\r\n            {{ scope.row.value.toFixed(2) }}%\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          v-if=\"activeTab === 'topScore'\"\r\n          prop=\"value\"\r\n          label=\"总得分\"\r\n        ></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, watch } from 'vue';\r\n  import axios from '@/api';\r\n  import { ElMessage } from 'element-plus';\r\n  import * as echarts from 'echarts';\r\n  \r\n  const activeTab = ref('topPass');\r\n  const leaderboard = ref([]);\r\n  const chart = ref(null);\r\n  \r\n  // 更新图表\r\n  const updateChart = () => {\r\n    if (!chart.value) {\r\n      chart.value = echarts.init(document.getElementById('chart'));\r\n    }\r\n  \r\n    const usernames = leaderboard.value.map((item) => item.username);\r\n    const data = leaderboard.value.map((item) => item.value);\r\n  \r\n    const option = {\r\n      title: {\r\n        text:\r\n          activeTab.value === 'topPass'\r\n            ? '通过数排行'\r\n            : activeTab.value === 'topAccuracy'\r\n            ? '正确率排行'\r\n            : '总得分排行',\r\n        left: 'center',\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        type: 'category',\r\n        data: usernames,\r\n        axisLabel: {\r\n          interval: 0,\r\n          rotate: 30,\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      series: [\r\n        {\r\n          data: data,\r\n          type: 'bar',\r\n          smooth: true,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    chart.value.setOption(option);\r\n  };\r\n  \r\n  // 获取排行榜数据\r\n  const fetchLeaderboard = async (type) => {\r\n    let url = '';\r\n    switch (type) {\r\n      case 'topPass':\r\n        url = '/leaderboard/top-pass-users'; // 简化接口\r\n        break;\r\n      case 'topAccuracy':\r\n        url = '/leaderboard/top-accuracy-users'; // 简化接口\r\n        break;\r\n      case 'topScore':\r\n        url = '/leaderboard/top-score-users'; // 简化接口\r\n        break;\r\n    }\r\n    try {\r\n      const res = await axios.get(url, { params: { limit: 10 } });\r\n      leaderboard.value = res.data.data;\r\n      updateChart();\r\n    } catch (error) {\r\n      ElMessage.error('获取排行榜失败');\r\n    }\r\n  };\r\n  \r\n  // 处理选项卡点击事件\r\n  const handleTabClick = (tab) => {\r\n    fetchLeaderboard(tab.props.name);\r\n  };\r\n  \r\n  // 监听 activeTab 的变化\r\n  watch(activeTab, (newTab) => {\r\n    fetchLeaderboard(newTab);\r\n  });\r\n  \r\n  // 初始加载\r\n  onMounted(() => {\r\n    fetchLeaderboard(activeTab.value);\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #chart {\r\n    background-color: #fff;\r\n    border: 1px solid #ebeef5;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n  }\r\n  </style>\r\n  ","import script from \"./UserLeaderboardView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLeaderboardView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLeaderboardView.vue?vue&type=style&index=0&id=27baa7b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-27baa7b4\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\n\r\nimport UserLogin from '../views/UserLogin.vue'\r\nimport Layout from '../components/LayoutView.vue'\r\nimport Home from '../views/HomeView.vue'\r\nimport ProgrammingLearning from '../views/ProgrammingLearning.vue'\r\nimport QuestionBank from '../views/QuestionBank.vue'\r\nimport SmartQA from '../views/SmartQA.vue'\r\nimport PersonalInfo from '../views/PersonalInfo.vue'\r\nimport Register from '../views/RegisterView.vue'\r\nimport RandomQuestion from '@/views/RandomQuestion.vue'\r\n\r\nimport AdminLayout from '../components/AdminLayout.vue'\r\nimport DashboardView from '@/views/DashboardView.vue'\r\nimport ProblemManagement from '@/views/ProblemManagement.vue'\r\nimport SampleManagement from '@/views/SampleManagement.vue'\r\nimport TeacherLogin from '@/views/TeacherLogin.vue'\r\nimport SubmissionManagement from '@/views/SubmissionManagement.vue'\r\nimport UserManagement from '@/views/UserManagement.vue'\r\nimport CommentManagement from '@/views/CommentManagement.vue'\r\nimport LeaderboardView from '@/views/LeaderboardView.vue'\r\nimport DescriptionView from '@/views/DescriptionView.vue'\r\nimport ProblemAnswers from '@/views/ProblemAnswers.vue'\r\nimport AiOptimization from '@/views/AiOptimization.vue'\r\nimport UserLeaderboardView from '@/views/UserLeaderboardView.vue'\r\n// 定义路由规则\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Layout,\r\n    children: [\r\n      { path: '', name: 'Home', component: Home },\r\n      {\r\n        path: 'programming-learning',\r\n        name: 'ProgrammingLearning',\r\n        component: ProgrammingLearning\r\n      },\r\n      { path: 'question-bank', name: 'QuestionBank', component: QuestionBank },\r\n      { path: 'smart-qa', name: 'SmartQA', component: SmartQA },\r\n      {\r\n        path: '/ai-optimization/:id',\r\n        name: 'AiOptimization',\r\n        component: AiOptimization,\r\n      },\r\n      \r\n      {\r\n        path: '/leaderboard',\r\n        name: 'UserLeaderboardView',\r\n        component: UserLeaderboardView,\r\n      },\r\n      { path: 'personal-info', name: 'PersonalInfo', component: PersonalInfo },\r\n      {\r\n        path: 'random-question',\r\n        name: 'RandomQuestion',\r\n        component: RandomQuestion\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: '/admin',\r\n    component: AdminLayout,\r\n    meta: { requiresAuth: true, role: 'teacher' },\r\n    children: [\r\n      { path: 'dashboard', name: 'Dashboard', component: DashboardView },\r\n      {\r\n        path: 'problems',\r\n        name: 'ProblemManagement',\r\n        component: ProblemManagement\r\n      },\r\n      {\r\n        path: 'problem-samples/:id?',\r\n        name: 'SampleManagement',\r\n        component: SampleManagement\r\n      },\r\n      {\r\n        path: 'submissions/:id?',\r\n        name: 'SubmissionsManagement',\r\n        component: SubmissionManagement\r\n      },\r\n      {\r\n        path: 'user',\r\n        name: 'UserManagement',\r\n        component: UserManagement\r\n      },\r\n      {\r\n        path: 'comment',\r\n        name: 'CommentManagement',\r\n        component: CommentManagement\r\n      },\r\n      {\r\n        path: 'rankings',\r\n        name: 'LeaderboardView',\r\n        component: LeaderboardView\r\n      },\r\n      {\r\n        path: '/admin/problem-answers/:id?',\r\n        name: 'ProblemAnswers',\r\n        component: ProblemAnswers,\r\n      },\r\n      \r\n    ]\r\n  },\r\n  { path: '/description/:id', name: 'DescriptionView', component: DescriptionView },\r\n  { path: '/login', component: UserLogin },\r\n  { path: '/teach-login', component: TeacherLogin },\r\n  { path: '/register', component: Register }\r\n]\r\n\r\n// 创建路由实例\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\n// 路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  // 获取 Token 和角色信息（先从 Vuex，再从 localStorage）\r\n  const satoken = store.getters.satoken || localStorage.getItem('satoken')\r\n  const role = store.getters.role || localStorage.getItem('role')\r\n\r\n  // 判断是否需要认证\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!satoken) {\r\n      ElMessage.error('请先登录')\r\n      return next('/teach-login') // 重定向到教师登录页\r\n    }\r\n\r\n    if (role !== 'teacher') {\r\n      ElMessage.error('权限不足，请使用教师账户登录')\r\n      return next('/teach-login') // 重定向到教师登录页\r\n    }\r\n  }\r\n\r\n  next() // 放行\r\n})\r\n\r\nexport default router\r\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\n\nconst app = createApp(App);\n\napp.use(router); // 注册 Vue Router\napp.use(ElementPlus); // 注册 Element Plus\napp.use(store); // 注册 Vuex Store\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkoj_web\"] = self[\"webpackChunkoj_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(12864); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["__exports__","savedToken","localStorage","getItem","savedRole","savedUser","JSON","parse","store","createStore","state","isLoggedIn","user","satoken","role","mutations","login","payload","setItem","stringify","logout","removeItem","actions","commit","credentials","fetch","method","headers","body","then","response","json","data","code","Error","message","getters","form","reactive","username","password","router","useRouter","useStore","onSubmit","console","log","dispatch","push","catch","error","goToAdminLogin","goToRegister","route","useRoute","activeIndex","ref","name","avatarUrl","txPng","watch","newName","value","handleSelect","index","computed","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_createStaticVNode","script","render","goToRandomQuestion","apiClient","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","status","ElMessage","questions","loading","pagination","current","size","total","filters","difficulty","search","fetchQuestions","async","res","get","params","query","records","handlePageChange","page","getDifficultyTag","viewQuestion","id","solveQuestion","randomQuestion","length","randomId","Math","floor","random","warning","onMounted","submissionsData","fetchSubmissions","currentPage","aiScore","post","success","optimizeCode","err","studentNumber","email","level","totalSubmissions","successfulSubmissions","totalScore","editUser","studentId","editDialogVisible","editForm","rules","required","trigger","type","fetchUserInfo","Object","assign","openEditDialog","submitEdit","validate","valid","put","confirmPassword","validatePass","rule","callback","ruleForm","validateField","validatePass2","min","max","validator","submitForm","resetForm","resetFields","modelValue","repeat","emit","__emit","updateValue","newValue","cmOptions","extensions","basicSetup","cpp","oneDark","tabSize","indentWithTab","lineNumbers","styleActiveLine","lineWrap","foldGutter","scrollbarStyle","question","handleSubmitCode","ok","result","breadcrumbTitle","titles","path","activeMenu","stats","problemCount","submissionCount","acceptedCount","userCount","recentSubmissions","fetchStats","fetchRecentSubmissions","getStatusTag","goToPage","searchQuery","problems","selectedRows","dialogVisible","isEdit","title","description","inputDescription","outputDescription","tags","timeLimit","memoryLimit","visible","fetchProblems","pageNum","handlePageSizeChange","openAddDialog","editProblem","problem","saveProblem","deleteProblem","delete","deleteSelected","ids","map","row","handleSelectionChange","rows","goToSamples","checkDuplicates","problemId","goToAnswers","handleDropdownCommand","command","Number","samples","sampleInput","sampleOutput","problemExplain","fetchSamples","url","sample","editSample","undefined","saveSample","isNaN","trim","confirmDeleteSample","ElMessageBox","confirm","confirmButtonText","cancelButtonText","deleteSample","newId","goBack","back","loginForm","handleLogin","submissions","score","currentSubmission","deleteSubmission","openScoreDialog","submission","saveScore","users","aiPointsForm","points","fetchUsers","deleteUser","deleteSelectedUsers","addAiPoints","prompt","inputPattern","inputErrorMessage","i","parseInt","info","comments","fetchComments","deleteComment","activeTab","leaderboard","fetchLeaderboard","limit","handleTabClick","tab","props","problemData","solutionData","solutionError","submissionData","submissionError","rankData","currentUserId","newComment","content","fetchProblemData","fetchSolutionData","fetchSubmissionData","fetchRankData","rank","percentage","equalRankCount","submitComment","comment","fetchCurrentUserId","__props","activeMainTab","activeResultTab","isLoading","testResults","testCases","fetchProblem","submitCode","sourceCode","languageId","time","runtime","memory","runTests","testCase","output","stdout","detail","answers","currentAnswer","solution","fetchAnswers","editAnswer","answer","saveAnswer","deleteAnswer","md","MarkdownIt","html","linkify","typographer","highlight","str","lang","hljs","utils","escapeHtml","renderedMarkdown","fetchOptimizationData","recordId","markdownContent","optimized_code","chart","updateChart","echarts","document","getElementById","usernames","item","option","text","left","tooltip","xAxis","axisLabel","interval","rotate","yAxis","series","smooth","setOption","newTab","routes","component","Layout","children","Home","ProgrammingLearning","QuestionBank","SmartQA","AiOptimization","UserLeaderboardView","PersonalInfo","RandomQuestion","AdminLayout","meta","requiresAuth","DashboardView","ProblemManagement","SampleManagement","SubmissionManagement","UserManagement","CommentManagement","LeaderboardView","ProblemAnswers","DescriptionView","UserLogin","TeacherLogin","Register","createRouter","history","createWebHistory","beforeEach","from","next","matched","some","record","app","createApp","App","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}